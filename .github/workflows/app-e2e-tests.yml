name: APP E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  app-e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]

    services:
      docker:
        image: docker:24-dind
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Check whether nx workspace sync
        run: pnpm nx sync:check

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps
        working-directory: apps/app-e2e

      - name: Build db
        run: pnpm nx build db

      - name: Build shared
        run: pnpm nx build shared

      - name: Build plugin-core
        run: pnpm nx build plugin-core

      - name: Install dependencies
        run: pnpm install

      - name: Build and load plugins
        run: pnpm load-internal-plugins

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm nx build app

      - name: Start Docker services
        run: |
          echo "üê≥ Start docker..."
          docker compose up -d --wait
        working-directory: apps/app-e2e

      - name: Start application
        run: |
          echo "üöÄ Prepare db enviroment for app preview..."
          pnpm start
          echo "‚è≥ Wait ..."
          sleep 15

          # Verify preview start
          timeout 60s bash -c 'until curl -f http://localhost:3000/api/__health || curl -f http://localhost:3000/api/__health; do sleep 2; done' || {
            echo "‚ùå app preview start failed"
            echo "Logs:"
            jobs
            exit 1
          }

          echo "‚úÖ app preview start successfully"
        working-directory: apps/app-e2e
        env:
          DATABASE_URL: "postgresql://user:pass@localhost:5432/cat?schema=public"

      - name: Run E2E tests
        run: |
          echo "üß™ Run E2E..."
          pnpm playwright test
        working-directory: apps/app-e2e
        env:
          CI: true

      - name: Cleanup Docker services
        if: always()
        run: |
          echo "üõë Cleaup..."
          docker compose down --rmi all -v || true
          docker system prune -af || true
        working-directory: apps/app-e2e
