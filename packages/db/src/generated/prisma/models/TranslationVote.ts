
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TranslationVote` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TranslationVote
 * 
 */
export type TranslationVoteModel = runtime.Types.Result.DefaultSelection<Prisma.$TranslationVotePayload>

export type AggregateTranslationVote = {
  _count: TranslationVoteCountAggregateOutputType | null
  _avg: TranslationVoteAvgAggregateOutputType | null
  _sum: TranslationVoteSumAggregateOutputType | null
  _min: TranslationVoteMinAggregateOutputType | null
  _max: TranslationVoteMaxAggregateOutputType | null
}

export type TranslationVoteAvgAggregateOutputType = {
  id: number | null
  value: number | null
  translationId: number | null
}

export type TranslationVoteSumAggregateOutputType = {
  id: number | null
  value: number | null
  translationId: number | null
}

export type TranslationVoteMinAggregateOutputType = {
  id: number | null
  value: number | null
  createdAt: Date | null
  updatedAt: Date | null
  voterId: string | null
  translationId: number | null
}

export type TranslationVoteMaxAggregateOutputType = {
  id: number | null
  value: number | null
  createdAt: Date | null
  updatedAt: Date | null
  voterId: string | null
  translationId: number | null
}

export type TranslationVoteCountAggregateOutputType = {
  id: number
  value: number
  createdAt: number
  updatedAt: number
  voterId: number
  translationId: number
  _all: number
}


export type TranslationVoteAvgAggregateInputType = {
  id?: true
  value?: true
  translationId?: true
}

export type TranslationVoteSumAggregateInputType = {
  id?: true
  value?: true
  translationId?: true
}

export type TranslationVoteMinAggregateInputType = {
  id?: true
  value?: true
  createdAt?: true
  updatedAt?: true
  voterId?: true
  translationId?: true
}

export type TranslationVoteMaxAggregateInputType = {
  id?: true
  value?: true
  createdAt?: true
  updatedAt?: true
  voterId?: true
  translationId?: true
}

export type TranslationVoteCountAggregateInputType = {
  id?: true
  value?: true
  createdAt?: true
  updatedAt?: true
  voterId?: true
  translationId?: true
  _all?: true
}

export type TranslationVoteAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslationVote to aggregate.
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationVotes to fetch.
   */
  orderBy?: Prisma.TranslationVoteOrderByWithRelationInput | Prisma.TranslationVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TranslationVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TranslationVotes
  **/
  _count?: true | TranslationVoteCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TranslationVoteAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TranslationVoteSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TranslationVoteMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TranslationVoteMaxAggregateInputType
}

export type GetTranslationVoteAggregateType<T extends TranslationVoteAggregateArgs> = {
      [P in keyof T & keyof AggregateTranslationVote]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTranslationVote[P]>
    : Prisma.GetScalarType<T[P], AggregateTranslationVote[P]>
}




export type TranslationVoteGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TranslationVoteWhereInput
  orderBy?: Prisma.TranslationVoteOrderByWithAggregationInput | Prisma.TranslationVoteOrderByWithAggregationInput[]
  by: Prisma.TranslationVoteScalarFieldEnum[] | Prisma.TranslationVoteScalarFieldEnum
  having?: Prisma.TranslationVoteScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TranslationVoteCountAggregateInputType | true
  _avg?: TranslationVoteAvgAggregateInputType
  _sum?: TranslationVoteSumAggregateInputType
  _min?: TranslationVoteMinAggregateInputType
  _max?: TranslationVoteMaxAggregateInputType
}

export type TranslationVoteGroupByOutputType = {
  id: number
  value: number
  createdAt: Date
  updatedAt: Date
  voterId: string
  translationId: number
  _count: TranslationVoteCountAggregateOutputType | null
  _avg: TranslationVoteAvgAggregateOutputType | null
  _sum: TranslationVoteSumAggregateOutputType | null
  _min: TranslationVoteMinAggregateOutputType | null
  _max: TranslationVoteMaxAggregateOutputType | null
}

type GetTranslationVoteGroupByPayload<T extends TranslationVoteGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TranslationVoteGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TranslationVoteGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TranslationVoteGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TranslationVoteGroupByOutputType[P]>
      }
    >
  > 



export type TranslationVoteWhereInput = {
  AND?: Prisma.TranslationVoteWhereInput | Prisma.TranslationVoteWhereInput[]
  OR?: Prisma.TranslationVoteWhereInput[]
  NOT?: Prisma.TranslationVoteWhereInput | Prisma.TranslationVoteWhereInput[]
  id?: Prisma.IntFilter<"TranslationVote"> | number
  value?: Prisma.IntFilter<"TranslationVote"> | number
  createdAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  voterId?: Prisma.StringFilter<"TranslationVote"> | string
  translationId?: Prisma.IntFilter<"TranslationVote"> | number
  Voter?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  Translation?: Prisma.XOR<Prisma.TranslationScalarRelationFilter, Prisma.TranslationWhereInput>
}

export type TranslationVoteOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  voterId?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  Voter?: Prisma.UserOrderByWithRelationInput
  Translation?: Prisma.TranslationOrderByWithRelationInput
  _relevance?: Prisma.TranslationVoteOrderByRelevanceInput
}

export type TranslationVoteWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  oneVotePerUserUniqueTranslation?: Prisma.TranslationVoteOneVotePerUserUniqueTranslationCompoundUniqueInput
  AND?: Prisma.TranslationVoteWhereInput | Prisma.TranslationVoteWhereInput[]
  OR?: Prisma.TranslationVoteWhereInput[]
  NOT?: Prisma.TranslationVoteWhereInput | Prisma.TranslationVoteWhereInput[]
  value?: Prisma.IntFilter<"TranslationVote"> | number
  createdAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  voterId?: Prisma.StringFilter<"TranslationVote"> | string
  translationId?: Prisma.IntFilter<"TranslationVote"> | number
  Voter?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  Translation?: Prisma.XOR<Prisma.TranslationScalarRelationFilter, Prisma.TranslationWhereInput>
}, "id" | "oneVotePerUserUniqueTranslation">

export type TranslationVoteOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  voterId?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  _count?: Prisma.TranslationVoteCountOrderByAggregateInput
  _avg?: Prisma.TranslationVoteAvgOrderByAggregateInput
  _max?: Prisma.TranslationVoteMaxOrderByAggregateInput
  _min?: Prisma.TranslationVoteMinOrderByAggregateInput
  _sum?: Prisma.TranslationVoteSumOrderByAggregateInput
}

export type TranslationVoteScalarWhereWithAggregatesInput = {
  AND?: Prisma.TranslationVoteScalarWhereWithAggregatesInput | Prisma.TranslationVoteScalarWhereWithAggregatesInput[]
  OR?: Prisma.TranslationVoteScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TranslationVoteScalarWhereWithAggregatesInput | Prisma.TranslationVoteScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"TranslationVote"> | number
  value?: Prisma.IntWithAggregatesFilter<"TranslationVote"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TranslationVote"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TranslationVote"> | Date | string
  voterId?: Prisma.StringWithAggregatesFilter<"TranslationVote"> | string
  translationId?: Prisma.IntWithAggregatesFilter<"TranslationVote"> | number
}

export type TranslationVoteCreateInput = {
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  Voter: Prisma.UserCreateNestedOneWithoutTranslationVotesInput
  Translation: Prisma.TranslationCreateNestedOneWithoutTranslationVotesInput
}

export type TranslationVoteUncheckedCreateInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  voterId: string
  translationId: number
}

export type TranslationVoteUpdateInput = {
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Voter?: Prisma.UserUpdateOneRequiredWithoutTranslationVotesNestedInput
  Translation?: Prisma.TranslationUpdateOneRequiredWithoutTranslationVotesNestedInput
}

export type TranslationVoteUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  voterId?: Prisma.StringFieldUpdateOperationsInput | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslationVoteCreateManyInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  voterId: string
  translationId: number
}

export type TranslationVoteUpdateManyMutationInput = {
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TranslationVoteUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  voterId?: Prisma.StringFieldUpdateOperationsInput | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslationVoteListRelationFilter = {
  every?: Prisma.TranslationVoteWhereInput
  some?: Prisma.TranslationVoteWhereInput
  none?: Prisma.TranslationVoteWhereInput
}

export type TranslationVoteOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TranslationVoteOrderByRelevanceInput = {
  fields: Prisma.TranslationVoteOrderByRelevanceFieldEnum | Prisma.TranslationVoteOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type TranslationVoteOneVotePerUserUniqueTranslationCompoundUniqueInput = {
  voterId: string
  translationId: number
}

export type TranslationVoteCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  voterId?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationVoteAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationVoteMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  voterId?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationVoteMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  voterId?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationVoteSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationVoteCreateNestedManyWithoutTranslationInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput> | Prisma.TranslationVoteCreateWithoutTranslationInput[] | Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput | Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput[]
  createMany?: Prisma.TranslationVoteCreateManyTranslationInputEnvelope
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
}

export type TranslationVoteUncheckedCreateNestedManyWithoutTranslationInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput> | Prisma.TranslationVoteCreateWithoutTranslationInput[] | Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput | Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput[]
  createMany?: Prisma.TranslationVoteCreateManyTranslationInputEnvelope
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
}

export type TranslationVoteUpdateManyWithoutTranslationNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput> | Prisma.TranslationVoteCreateWithoutTranslationInput[] | Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput | Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput[]
  upsert?: Prisma.TranslationVoteUpsertWithWhereUniqueWithoutTranslationInput | Prisma.TranslationVoteUpsertWithWhereUniqueWithoutTranslationInput[]
  createMany?: Prisma.TranslationVoteCreateManyTranslationInputEnvelope
  set?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  disconnect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  delete?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  update?: Prisma.TranslationVoteUpdateWithWhereUniqueWithoutTranslationInput | Prisma.TranslationVoteUpdateWithWhereUniqueWithoutTranslationInput[]
  updateMany?: Prisma.TranslationVoteUpdateManyWithWhereWithoutTranslationInput | Prisma.TranslationVoteUpdateManyWithWhereWithoutTranslationInput[]
  deleteMany?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
}

export type TranslationVoteUncheckedUpdateManyWithoutTranslationNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput> | Prisma.TranslationVoteCreateWithoutTranslationInput[] | Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput | Prisma.TranslationVoteCreateOrConnectWithoutTranslationInput[]
  upsert?: Prisma.TranslationVoteUpsertWithWhereUniqueWithoutTranslationInput | Prisma.TranslationVoteUpsertWithWhereUniqueWithoutTranslationInput[]
  createMany?: Prisma.TranslationVoteCreateManyTranslationInputEnvelope
  set?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  disconnect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  delete?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  update?: Prisma.TranslationVoteUpdateWithWhereUniqueWithoutTranslationInput | Prisma.TranslationVoteUpdateWithWhereUniqueWithoutTranslationInput[]
  updateMany?: Prisma.TranslationVoteUpdateManyWithWhereWithoutTranslationInput | Prisma.TranslationVoteUpdateManyWithWhereWithoutTranslationInput[]
  deleteMany?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
}

export type TranslationVoteCreateNestedManyWithoutVoterInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput> | Prisma.TranslationVoteCreateWithoutVoterInput[] | Prisma.TranslationVoteUncheckedCreateWithoutVoterInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutVoterInput | Prisma.TranslationVoteCreateOrConnectWithoutVoterInput[]
  createMany?: Prisma.TranslationVoteCreateManyVoterInputEnvelope
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
}

export type TranslationVoteUncheckedCreateNestedManyWithoutVoterInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput> | Prisma.TranslationVoteCreateWithoutVoterInput[] | Prisma.TranslationVoteUncheckedCreateWithoutVoterInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutVoterInput | Prisma.TranslationVoteCreateOrConnectWithoutVoterInput[]
  createMany?: Prisma.TranslationVoteCreateManyVoterInputEnvelope
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
}

export type TranslationVoteUpdateManyWithoutVoterNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput> | Prisma.TranslationVoteCreateWithoutVoterInput[] | Prisma.TranslationVoteUncheckedCreateWithoutVoterInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutVoterInput | Prisma.TranslationVoteCreateOrConnectWithoutVoterInput[]
  upsert?: Prisma.TranslationVoteUpsertWithWhereUniqueWithoutVoterInput | Prisma.TranslationVoteUpsertWithWhereUniqueWithoutVoterInput[]
  createMany?: Prisma.TranslationVoteCreateManyVoterInputEnvelope
  set?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  disconnect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  delete?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  update?: Prisma.TranslationVoteUpdateWithWhereUniqueWithoutVoterInput | Prisma.TranslationVoteUpdateWithWhereUniqueWithoutVoterInput[]
  updateMany?: Prisma.TranslationVoteUpdateManyWithWhereWithoutVoterInput | Prisma.TranslationVoteUpdateManyWithWhereWithoutVoterInput[]
  deleteMany?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
}

export type TranslationVoteUncheckedUpdateManyWithoutVoterNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput> | Prisma.TranslationVoteCreateWithoutVoterInput[] | Prisma.TranslationVoteUncheckedCreateWithoutVoterInput[]
  connectOrCreate?: Prisma.TranslationVoteCreateOrConnectWithoutVoterInput | Prisma.TranslationVoteCreateOrConnectWithoutVoterInput[]
  upsert?: Prisma.TranslationVoteUpsertWithWhereUniqueWithoutVoterInput | Prisma.TranslationVoteUpsertWithWhereUniqueWithoutVoterInput[]
  createMany?: Prisma.TranslationVoteCreateManyVoterInputEnvelope
  set?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  disconnect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  delete?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  connect?: Prisma.TranslationVoteWhereUniqueInput | Prisma.TranslationVoteWhereUniqueInput[]
  update?: Prisma.TranslationVoteUpdateWithWhereUniqueWithoutVoterInput | Prisma.TranslationVoteUpdateWithWhereUniqueWithoutVoterInput[]
  updateMany?: Prisma.TranslationVoteUpdateManyWithWhereWithoutVoterInput | Prisma.TranslationVoteUpdateManyWithWhereWithoutVoterInput[]
  deleteMany?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
}

export type TranslationVoteCreateWithoutTranslationInput = {
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  Voter: Prisma.UserCreateNestedOneWithoutTranslationVotesInput
}

export type TranslationVoteUncheckedCreateWithoutTranslationInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  voterId: string
}

export type TranslationVoteCreateOrConnectWithoutTranslationInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput>
}

export type TranslationVoteCreateManyTranslationInputEnvelope = {
  data: Prisma.TranslationVoteCreateManyTranslationInput | Prisma.TranslationVoteCreateManyTranslationInput[]
  skipDuplicates?: boolean
}

export type TranslationVoteUpsertWithWhereUniqueWithoutTranslationInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslationVoteUpdateWithoutTranslationInput, Prisma.TranslationVoteUncheckedUpdateWithoutTranslationInput>
  create: Prisma.XOR<Prisma.TranslationVoteCreateWithoutTranslationInput, Prisma.TranslationVoteUncheckedCreateWithoutTranslationInput>
}

export type TranslationVoteUpdateWithWhereUniqueWithoutTranslationInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslationVoteUpdateWithoutTranslationInput, Prisma.TranslationVoteUncheckedUpdateWithoutTranslationInput>
}

export type TranslationVoteUpdateManyWithWhereWithoutTranslationInput = {
  where: Prisma.TranslationVoteScalarWhereInput
  data: Prisma.XOR<Prisma.TranslationVoteUpdateManyMutationInput, Prisma.TranslationVoteUncheckedUpdateManyWithoutTranslationInput>
}

export type TranslationVoteScalarWhereInput = {
  AND?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
  OR?: Prisma.TranslationVoteScalarWhereInput[]
  NOT?: Prisma.TranslationVoteScalarWhereInput | Prisma.TranslationVoteScalarWhereInput[]
  id?: Prisma.IntFilter<"TranslationVote"> | number
  value?: Prisma.IntFilter<"TranslationVote"> | number
  createdAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationVote"> | Date | string
  voterId?: Prisma.StringFilter<"TranslationVote"> | string
  translationId?: Prisma.IntFilter<"TranslationVote"> | number
}

export type TranslationVoteCreateWithoutVoterInput = {
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  Translation: Prisma.TranslationCreateNestedOneWithoutTranslationVotesInput
}

export type TranslationVoteUncheckedCreateWithoutVoterInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
}

export type TranslationVoteCreateOrConnectWithoutVoterInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput>
}

export type TranslationVoteCreateManyVoterInputEnvelope = {
  data: Prisma.TranslationVoteCreateManyVoterInput | Prisma.TranslationVoteCreateManyVoterInput[]
  skipDuplicates?: boolean
}

export type TranslationVoteUpsertWithWhereUniqueWithoutVoterInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslationVoteUpdateWithoutVoterInput, Prisma.TranslationVoteUncheckedUpdateWithoutVoterInput>
  create: Prisma.XOR<Prisma.TranslationVoteCreateWithoutVoterInput, Prisma.TranslationVoteUncheckedCreateWithoutVoterInput>
}

export type TranslationVoteUpdateWithWhereUniqueWithoutVoterInput = {
  where: Prisma.TranslationVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslationVoteUpdateWithoutVoterInput, Prisma.TranslationVoteUncheckedUpdateWithoutVoterInput>
}

export type TranslationVoteUpdateManyWithWhereWithoutVoterInput = {
  where: Prisma.TranslationVoteScalarWhereInput
  data: Prisma.XOR<Prisma.TranslationVoteUpdateManyMutationInput, Prisma.TranslationVoteUncheckedUpdateManyWithoutVoterInput>
}

export type TranslationVoteCreateManyTranslationInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  voterId: string
}

export type TranslationVoteUpdateWithoutTranslationInput = {
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Voter?: Prisma.UserUpdateOneRequiredWithoutTranslationVotesNestedInput
}

export type TranslationVoteUncheckedUpdateWithoutTranslationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  voterId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TranslationVoteUncheckedUpdateManyWithoutTranslationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  voterId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TranslationVoteCreateManyVoterInput = {
  id?: number
  value?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
}

export type TranslationVoteUpdateWithoutVoterInput = {
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Translation?: Prisma.TranslationUpdateOneRequiredWithoutTranslationVotesNestedInput
}

export type TranslationVoteUncheckedUpdateWithoutVoterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslationVoteUncheckedUpdateManyWithoutVoterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}



export type TranslationVoteSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  voterId?: boolean
  translationId?: boolean
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translationVote"]>

export type TranslationVoteSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  voterId?: boolean
  translationId?: boolean
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translationVote"]>

export type TranslationVoteSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  voterId?: boolean
  translationId?: boolean
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translationVote"]>

export type TranslationVoteSelectScalar = {
  id?: boolean
  value?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  voterId?: boolean
  translationId?: boolean
}

export type TranslationVoteOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "value" | "createdAt" | "updatedAt" | "voterId" | "translationId", ExtArgs["result"]["translationVote"]>
export type TranslationVoteInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}
export type TranslationVoteIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}
export type TranslationVoteIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Voter?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
}

export type $TranslationVotePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TranslationVote"
  objects: {
    Voter: Prisma.$UserPayload<ExtArgs>
    Translation: Prisma.$TranslationPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    value: number
    createdAt: Date
    updatedAt: Date
    voterId: string
    translationId: number
  }, ExtArgs["result"]["translationVote"]>
  composites: {}
}

export type TranslationVoteGetPayload<S extends boolean | null | undefined | TranslationVoteDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload, S>

export type TranslationVoteCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TranslationVoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TranslationVoteCountAggregateInputType | true
  }

export interface TranslationVoteDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TranslationVote'], meta: { name: 'TranslationVote' } }
  /**
   * Find zero or one TranslationVote that matches the filter.
   * @param {TranslationVoteFindUniqueArgs} args - Arguments to find a TranslationVote
   * @example
   * // Get one TranslationVote
   * const translationVote = await prisma.translationVote.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TranslationVoteFindUniqueArgs>(args: Prisma.SelectSubset<T, TranslationVoteFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TranslationVote that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TranslationVoteFindUniqueOrThrowArgs} args - Arguments to find a TranslationVote
   * @example
   * // Get one TranslationVote
   * const translationVote = await prisma.translationVote.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TranslationVoteFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TranslationVoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslationVote that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteFindFirstArgs} args - Arguments to find a TranslationVote
   * @example
   * // Get one TranslationVote
   * const translationVote = await prisma.translationVote.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TranslationVoteFindFirstArgs>(args?: Prisma.SelectSubset<T, TranslationVoteFindFirstArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslationVote that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteFindFirstOrThrowArgs} args - Arguments to find a TranslationVote
   * @example
   * // Get one TranslationVote
   * const translationVote = await prisma.translationVote.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TranslationVoteFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TranslationVoteFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TranslationVotes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TranslationVotes
   * const translationVotes = await prisma.translationVote.findMany()
   * 
   * // Get first 10 TranslationVotes
   * const translationVotes = await prisma.translationVote.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const translationVoteWithIdOnly = await prisma.translationVote.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TranslationVoteFindManyArgs>(args?: Prisma.SelectSubset<T, TranslationVoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TranslationVote.
   * @param {TranslationVoteCreateArgs} args - Arguments to create a TranslationVote.
   * @example
   * // Create one TranslationVote
   * const TranslationVote = await prisma.translationVote.create({
   *   data: {
   *     // ... data to create a TranslationVote
   *   }
   * })
   * 
   */
  create<T extends TranslationVoteCreateArgs>(args: Prisma.SelectSubset<T, TranslationVoteCreateArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TranslationVotes.
   * @param {TranslationVoteCreateManyArgs} args - Arguments to create many TranslationVotes.
   * @example
   * // Create many TranslationVotes
   * const translationVote = await prisma.translationVote.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TranslationVoteCreateManyArgs>(args?: Prisma.SelectSubset<T, TranslationVoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TranslationVotes and returns the data saved in the database.
   * @param {TranslationVoteCreateManyAndReturnArgs} args - Arguments to create many TranslationVotes.
   * @example
   * // Create many TranslationVotes
   * const translationVote = await prisma.translationVote.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TranslationVotes and only return the `id`
   * const translationVoteWithIdOnly = await prisma.translationVote.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TranslationVoteCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TranslationVoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TranslationVote.
   * @param {TranslationVoteDeleteArgs} args - Arguments to delete one TranslationVote.
   * @example
   * // Delete one TranslationVote
   * const TranslationVote = await prisma.translationVote.delete({
   *   where: {
   *     // ... filter to delete one TranslationVote
   *   }
   * })
   * 
   */
  delete<T extends TranslationVoteDeleteArgs>(args: Prisma.SelectSubset<T, TranslationVoteDeleteArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TranslationVote.
   * @param {TranslationVoteUpdateArgs} args - Arguments to update one TranslationVote.
   * @example
   * // Update one TranslationVote
   * const translationVote = await prisma.translationVote.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TranslationVoteUpdateArgs>(args: Prisma.SelectSubset<T, TranslationVoteUpdateArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TranslationVotes.
   * @param {TranslationVoteDeleteManyArgs} args - Arguments to filter TranslationVotes to delete.
   * @example
   * // Delete a few TranslationVotes
   * const { count } = await prisma.translationVote.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TranslationVoteDeleteManyArgs>(args?: Prisma.SelectSubset<T, TranslationVoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslationVotes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TranslationVotes
   * const translationVote = await prisma.translationVote.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TranslationVoteUpdateManyArgs>(args: Prisma.SelectSubset<T, TranslationVoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslationVotes and returns the data updated in the database.
   * @param {TranslationVoteUpdateManyAndReturnArgs} args - Arguments to update many TranslationVotes.
   * @example
   * // Update many TranslationVotes
   * const translationVote = await prisma.translationVote.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TranslationVotes and only return the `id`
   * const translationVoteWithIdOnly = await prisma.translationVote.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TranslationVoteUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TranslationVoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TranslationVote.
   * @param {TranslationVoteUpsertArgs} args - Arguments to update or create a TranslationVote.
   * @example
   * // Update or create a TranslationVote
   * const translationVote = await prisma.translationVote.upsert({
   *   create: {
   *     // ... data to create a TranslationVote
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TranslationVote we want to update
   *   }
   * })
   */
  upsert<T extends TranslationVoteUpsertArgs>(args: Prisma.SelectSubset<T, TranslationVoteUpsertArgs<ExtArgs>>): Prisma.Prisma__TranslationVoteClient<runtime.Types.Result.GetResult<Prisma.$TranslationVotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TranslationVotes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteCountArgs} args - Arguments to filter TranslationVotes to count.
   * @example
   * // Count the number of TranslationVotes
   * const count = await prisma.translationVote.count({
   *   where: {
   *     // ... the filter for the TranslationVotes we want to count
   *   }
   * })
  **/
  count<T extends TranslationVoteCountArgs>(
    args?: Prisma.Subset<T, TranslationVoteCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TranslationVoteCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TranslationVote.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TranslationVoteAggregateArgs>(args: Prisma.Subset<T, TranslationVoteAggregateArgs>): Prisma.PrismaPromise<GetTranslationVoteAggregateType<T>>

  /**
   * Group by TranslationVote.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationVoteGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TranslationVoteGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TranslationVoteGroupByArgs['orderBy'] }
      : { orderBy?: TranslationVoteGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TranslationVoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTranslationVoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TranslationVote model
 */
readonly fields: TranslationVoteFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TranslationVote.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TranslationVoteClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Voter<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Translation<T extends Prisma.TranslationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TranslationDefaultArgs<ExtArgs>>): Prisma.Prisma__TranslationClient<runtime.Types.Result.GetResult<Prisma.$TranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TranslationVote model
 */
export interface TranslationVoteFieldRefs {
  readonly id: Prisma.FieldRef<"TranslationVote", 'Int'>
  readonly value: Prisma.FieldRef<"TranslationVote", 'Int'>
  readonly createdAt: Prisma.FieldRef<"TranslationVote", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TranslationVote", 'DateTime'>
  readonly voterId: Prisma.FieldRef<"TranslationVote", 'String'>
  readonly translationId: Prisma.FieldRef<"TranslationVote", 'Int'>
}
    

// Custom InputTypes
/**
 * TranslationVote findUnique
 */
export type TranslationVoteFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter, which TranslationVote to fetch.
   */
  where: Prisma.TranslationVoteWhereUniqueInput
}

/**
 * TranslationVote findUniqueOrThrow
 */
export type TranslationVoteFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter, which TranslationVote to fetch.
   */
  where: Prisma.TranslationVoteWhereUniqueInput
}

/**
 * TranslationVote findFirst
 */
export type TranslationVoteFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter, which TranslationVote to fetch.
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationVotes to fetch.
   */
  orderBy?: Prisma.TranslationVoteOrderByWithRelationInput | Prisma.TranslationVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslationVotes.
   */
  cursor?: Prisma.TranslationVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslationVotes.
   */
  distinct?: Prisma.TranslationVoteScalarFieldEnum | Prisma.TranslationVoteScalarFieldEnum[]
}

/**
 * TranslationVote findFirstOrThrow
 */
export type TranslationVoteFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter, which TranslationVote to fetch.
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationVotes to fetch.
   */
  orderBy?: Prisma.TranslationVoteOrderByWithRelationInput | Prisma.TranslationVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslationVotes.
   */
  cursor?: Prisma.TranslationVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslationVotes.
   */
  distinct?: Prisma.TranslationVoteScalarFieldEnum | Prisma.TranslationVoteScalarFieldEnum[]
}

/**
 * TranslationVote findMany
 */
export type TranslationVoteFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter, which TranslationVotes to fetch.
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationVotes to fetch.
   */
  orderBy?: Prisma.TranslationVoteOrderByWithRelationInput | Prisma.TranslationVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TranslationVotes.
   */
  cursor?: Prisma.TranslationVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationVotes.
   */
  skip?: number
  distinct?: Prisma.TranslationVoteScalarFieldEnum | Prisma.TranslationVoteScalarFieldEnum[]
}

/**
 * TranslationVote create
 */
export type TranslationVoteCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * The data needed to create a TranslationVote.
   */
  data: Prisma.XOR<Prisma.TranslationVoteCreateInput, Prisma.TranslationVoteUncheckedCreateInput>
}

/**
 * TranslationVote createMany
 */
export type TranslationVoteCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TranslationVotes.
   */
  data: Prisma.TranslationVoteCreateManyInput | Prisma.TranslationVoteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TranslationVote createManyAndReturn
 */
export type TranslationVoteCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * The data used to create many TranslationVotes.
   */
  data: Prisma.TranslationVoteCreateManyInput | Prisma.TranslationVoteCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TranslationVote update
 */
export type TranslationVoteUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * The data needed to update a TranslationVote.
   */
  data: Prisma.XOR<Prisma.TranslationVoteUpdateInput, Prisma.TranslationVoteUncheckedUpdateInput>
  /**
   * Choose, which TranslationVote to update.
   */
  where: Prisma.TranslationVoteWhereUniqueInput
}

/**
 * TranslationVote updateMany
 */
export type TranslationVoteUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TranslationVotes.
   */
  data: Prisma.XOR<Prisma.TranslationVoteUpdateManyMutationInput, Prisma.TranslationVoteUncheckedUpdateManyInput>
  /**
   * Filter which TranslationVotes to update
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * Limit how many TranslationVotes to update.
   */
  limit?: number
}

/**
 * TranslationVote updateManyAndReturn
 */
export type TranslationVoteUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * The data used to update TranslationVotes.
   */
  data: Prisma.XOR<Prisma.TranslationVoteUpdateManyMutationInput, Prisma.TranslationVoteUncheckedUpdateManyInput>
  /**
   * Filter which TranslationVotes to update
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * Limit how many TranslationVotes to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TranslationVote upsert
 */
export type TranslationVoteUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * The filter to search for the TranslationVote to update in case it exists.
   */
  where: Prisma.TranslationVoteWhereUniqueInput
  /**
   * In case the TranslationVote found by the `where` argument doesn't exist, create a new TranslationVote with this data.
   */
  create: Prisma.XOR<Prisma.TranslationVoteCreateInput, Prisma.TranslationVoteUncheckedCreateInput>
  /**
   * In case the TranslationVote was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TranslationVoteUpdateInput, Prisma.TranslationVoteUncheckedUpdateInput>
}

/**
 * TranslationVote delete
 */
export type TranslationVoteDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
  /**
   * Filter which TranslationVote to delete.
   */
  where: Prisma.TranslationVoteWhereUniqueInput
}

/**
 * TranslationVote deleteMany
 */
export type TranslationVoteDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslationVotes to delete
   */
  where?: Prisma.TranslationVoteWhereInput
  /**
   * Limit how many TranslationVotes to delete.
   */
  limit?: number
}

/**
 * TranslationVote without action
 */
export type TranslationVoteDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationVote
   */
  select?: Prisma.TranslationVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationVote
   */
  omit?: Prisma.TranslationVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationVoteInclude<ExtArgs> | null
}
