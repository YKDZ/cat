
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TranslationApprovment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TranslationApprovment
 * 
 */
export type TranslationApprovmentModel = runtime.Types.Result.DefaultSelection<Prisma.$TranslationApprovmentPayload>

export type AggregateTranslationApprovment = {
  _count: TranslationApprovmentCountAggregateOutputType | null
  _avg: TranslationApprovmentAvgAggregateOutputType | null
  _sum: TranslationApprovmentSumAggregateOutputType | null
  _min: TranslationApprovmentMinAggregateOutputType | null
  _max: TranslationApprovmentMaxAggregateOutputType | null
}

export type TranslationApprovmentAvgAggregateOutputType = {
  id: number | null
  translationId: number | null
}

export type TranslationApprovmentSumAggregateOutputType = {
  id: number | null
  translationId: number | null
}

export type TranslationApprovmentMinAggregateOutputType = {
  id: number | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  translationId: number | null
  userId: string | null
}

export type TranslationApprovmentMaxAggregateOutputType = {
  id: number | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  translationId: number | null
  userId: string | null
}

export type TranslationApprovmentCountAggregateOutputType = {
  id: number
  isActive: number
  createdAt: number
  updatedAt: number
  translationId: number
  userId: number
  _all: number
}


export type TranslationApprovmentAvgAggregateInputType = {
  id?: true
  translationId?: true
}

export type TranslationApprovmentSumAggregateInputType = {
  id?: true
  translationId?: true
}

export type TranslationApprovmentMinAggregateInputType = {
  id?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  translationId?: true
  userId?: true
}

export type TranslationApprovmentMaxAggregateInputType = {
  id?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  translationId?: true
  userId?: true
}

export type TranslationApprovmentCountAggregateInputType = {
  id?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  translationId?: true
  userId?: true
  _all?: true
}

export type TranslationApprovmentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslationApprovment to aggregate.
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationApprovments to fetch.
   */
  orderBy?: Prisma.TranslationApprovmentOrderByWithRelationInput | Prisma.TranslationApprovmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TranslationApprovmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationApprovments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationApprovments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TranslationApprovments
  **/
  _count?: true | TranslationApprovmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TranslationApprovmentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TranslationApprovmentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TranslationApprovmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TranslationApprovmentMaxAggregateInputType
}

export type GetTranslationApprovmentAggregateType<T extends TranslationApprovmentAggregateArgs> = {
      [P in keyof T & keyof AggregateTranslationApprovment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTranslationApprovment[P]>
    : Prisma.GetScalarType<T[P], AggregateTranslationApprovment[P]>
}




export type TranslationApprovmentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TranslationApprovmentWhereInput
  orderBy?: Prisma.TranslationApprovmentOrderByWithAggregationInput | Prisma.TranslationApprovmentOrderByWithAggregationInput[]
  by: Prisma.TranslationApprovmentScalarFieldEnum[] | Prisma.TranslationApprovmentScalarFieldEnum
  having?: Prisma.TranslationApprovmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TranslationApprovmentCountAggregateInputType | true
  _avg?: TranslationApprovmentAvgAggregateInputType
  _sum?: TranslationApprovmentSumAggregateInputType
  _min?: TranslationApprovmentMinAggregateInputType
  _max?: TranslationApprovmentMaxAggregateInputType
}

export type TranslationApprovmentGroupByOutputType = {
  id: number
  isActive: boolean
  createdAt: Date
  updatedAt: Date
  translationId: number
  userId: string | null
  _count: TranslationApprovmentCountAggregateOutputType | null
  _avg: TranslationApprovmentAvgAggregateOutputType | null
  _sum: TranslationApprovmentSumAggregateOutputType | null
  _min: TranslationApprovmentMinAggregateOutputType | null
  _max: TranslationApprovmentMaxAggregateOutputType | null
}

type GetTranslationApprovmentGroupByPayload<T extends TranslationApprovmentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TranslationApprovmentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TranslationApprovmentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TranslationApprovmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TranslationApprovmentGroupByOutputType[P]>
      }
    >
  > 



export type TranslationApprovmentWhereInput = {
  AND?: Prisma.TranslationApprovmentWhereInput | Prisma.TranslationApprovmentWhereInput[]
  OR?: Prisma.TranslationApprovmentWhereInput[]
  NOT?: Prisma.TranslationApprovmentWhereInput | Prisma.TranslationApprovmentWhereInput[]
  id?: Prisma.IntFilter<"TranslationApprovment"> | number
  isActive?: Prisma.BoolFilter<"TranslationApprovment"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  translationId?: Prisma.IntFilter<"TranslationApprovment"> | number
  userId?: Prisma.StringNullableFilter<"TranslationApprovment"> | string | null
  Translation?: Prisma.XOR<Prisma.TranslationScalarRelationFilter, Prisma.TranslationWhereInput>
  User?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}

export type TranslationApprovmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  Translation?: Prisma.TranslationOrderByWithRelationInput
  User?: Prisma.UserOrderByWithRelationInput
  _relevance?: Prisma.TranslationApprovmentOrderByRelevanceInput
}

export type TranslationApprovmentWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.TranslationApprovmentWhereInput | Prisma.TranslationApprovmentWhereInput[]
  OR?: Prisma.TranslationApprovmentWhereInput[]
  NOT?: Prisma.TranslationApprovmentWhereInput | Prisma.TranslationApprovmentWhereInput[]
  isActive?: Prisma.BoolFilter<"TranslationApprovment"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  translationId?: Prisma.IntFilter<"TranslationApprovment"> | number
  userId?: Prisma.StringNullableFilter<"TranslationApprovment"> | string | null
  Translation?: Prisma.XOR<Prisma.TranslationScalarRelationFilter, Prisma.TranslationWhereInput>
  User?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}, "id">

export type TranslationApprovmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TranslationApprovmentCountOrderByAggregateInput
  _avg?: Prisma.TranslationApprovmentAvgOrderByAggregateInput
  _max?: Prisma.TranslationApprovmentMaxOrderByAggregateInput
  _min?: Prisma.TranslationApprovmentMinOrderByAggregateInput
  _sum?: Prisma.TranslationApprovmentSumOrderByAggregateInput
}

export type TranslationApprovmentScalarWhereWithAggregatesInput = {
  AND?: Prisma.TranslationApprovmentScalarWhereWithAggregatesInput | Prisma.TranslationApprovmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.TranslationApprovmentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TranslationApprovmentScalarWhereWithAggregatesInput | Prisma.TranslationApprovmentScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"TranslationApprovment"> | number
  isActive?: Prisma.BoolWithAggregatesFilter<"TranslationApprovment"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TranslationApprovment"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TranslationApprovment"> | Date | string
  translationId?: Prisma.IntWithAggregatesFilter<"TranslationApprovment"> | number
  userId?: Prisma.StringNullableWithAggregatesFilter<"TranslationApprovment"> | string | null
}

export type TranslationApprovmentCreateInput = {
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  Translation: Prisma.TranslationCreateNestedOneWithoutApprovmentsInput
  User?: Prisma.UserCreateNestedOneWithoutTranslationApprovmentsInput
}

export type TranslationApprovmentUncheckedCreateInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
  userId?: string | null
}

export type TranslationApprovmentUpdateInput = {
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Translation?: Prisma.TranslationUpdateOneRequiredWithoutApprovmentsNestedInput
  User?: Prisma.UserUpdateOneWithoutTranslationApprovmentsNestedInput
}

export type TranslationApprovmentUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TranslationApprovmentCreateManyInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
  userId?: string | null
}

export type TranslationApprovmentUpdateManyMutationInput = {
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TranslationApprovmentUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TranslationApprovmentListRelationFilter = {
  every?: Prisma.TranslationApprovmentWhereInput
  some?: Prisma.TranslationApprovmentWhereInput
  none?: Prisma.TranslationApprovmentWhereInput
}

export type TranslationApprovmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TranslationApprovmentOrderByRelevanceInput = {
  fields: Prisma.TranslationApprovmentOrderByRelevanceFieldEnum | Prisma.TranslationApprovmentOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type TranslationApprovmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TranslationApprovmentAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationApprovmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TranslationApprovmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TranslationApprovmentSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  translationId?: Prisma.SortOrder
}

export type TranslationApprovmentCreateNestedManyWithoutTranslationInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput> | Prisma.TranslationApprovmentCreateWithoutTranslationInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput | Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyTranslationInputEnvelope
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
}

export type TranslationApprovmentUncheckedCreateNestedManyWithoutTranslationInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput> | Prisma.TranslationApprovmentCreateWithoutTranslationInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput | Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyTranslationInputEnvelope
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
}

export type TranslationApprovmentUpdateManyWithoutTranslationNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput> | Prisma.TranslationApprovmentCreateWithoutTranslationInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput | Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput[]
  upsert?: Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutTranslationInput | Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutTranslationInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyTranslationInputEnvelope
  set?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  disconnect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  delete?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  update?: Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutTranslationInput | Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutTranslationInput[]
  updateMany?: Prisma.TranslationApprovmentUpdateManyWithWhereWithoutTranslationInput | Prisma.TranslationApprovmentUpdateManyWithWhereWithoutTranslationInput[]
  deleteMany?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
}

export type TranslationApprovmentUncheckedUpdateManyWithoutTranslationNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput> | Prisma.TranslationApprovmentCreateWithoutTranslationInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput | Prisma.TranslationApprovmentCreateOrConnectWithoutTranslationInput[]
  upsert?: Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutTranslationInput | Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutTranslationInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyTranslationInputEnvelope
  set?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  disconnect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  delete?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  update?: Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutTranslationInput | Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutTranslationInput[]
  updateMany?: Prisma.TranslationApprovmentUpdateManyWithWhereWithoutTranslationInput | Prisma.TranslationApprovmentUpdateManyWithWhereWithoutTranslationInput[]
  deleteMany?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
}

export type TranslationApprovmentCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput> | Prisma.TranslationApprovmentCreateWithoutUserInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput | Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyUserInputEnvelope
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
}

export type TranslationApprovmentUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput> | Prisma.TranslationApprovmentCreateWithoutUserInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput | Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyUserInputEnvelope
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
}

export type TranslationApprovmentUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput> | Prisma.TranslationApprovmentCreateWithoutUserInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput | Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutUserInput | Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyUserInputEnvelope
  set?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  disconnect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  delete?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  update?: Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutUserInput | Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TranslationApprovmentUpdateManyWithWhereWithoutUserInput | Prisma.TranslationApprovmentUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
}

export type TranslationApprovmentUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput> | Prisma.TranslationApprovmentCreateWithoutUserInput[] | Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput | Prisma.TranslationApprovmentCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutUserInput | Prisma.TranslationApprovmentUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TranslationApprovmentCreateManyUserInputEnvelope
  set?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  disconnect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  delete?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  connect?: Prisma.TranslationApprovmentWhereUniqueInput | Prisma.TranslationApprovmentWhereUniqueInput[]
  update?: Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutUserInput | Prisma.TranslationApprovmentUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TranslationApprovmentUpdateManyWithWhereWithoutUserInput | Prisma.TranslationApprovmentUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
}

export type TranslationApprovmentCreateWithoutTranslationInput = {
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  User?: Prisma.UserCreateNestedOneWithoutTranslationApprovmentsInput
}

export type TranslationApprovmentUncheckedCreateWithoutTranslationInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  userId?: string | null
}

export type TranslationApprovmentCreateOrConnectWithoutTranslationInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput>
}

export type TranslationApprovmentCreateManyTranslationInputEnvelope = {
  data: Prisma.TranslationApprovmentCreateManyTranslationInput | Prisma.TranslationApprovmentCreateManyTranslationInput[]
  skipDuplicates?: boolean
}

export type TranslationApprovmentUpsertWithWhereUniqueWithoutTranslationInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslationApprovmentUpdateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedUpdateWithoutTranslationInput>
  create: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedCreateWithoutTranslationInput>
}

export type TranslationApprovmentUpdateWithWhereUniqueWithoutTranslationInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateWithoutTranslationInput, Prisma.TranslationApprovmentUncheckedUpdateWithoutTranslationInput>
}

export type TranslationApprovmentUpdateManyWithWhereWithoutTranslationInput = {
  where: Prisma.TranslationApprovmentScalarWhereInput
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateManyMutationInput, Prisma.TranslationApprovmentUncheckedUpdateManyWithoutTranslationInput>
}

export type TranslationApprovmentScalarWhereInput = {
  AND?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
  OR?: Prisma.TranslationApprovmentScalarWhereInput[]
  NOT?: Prisma.TranslationApprovmentScalarWhereInput | Prisma.TranslationApprovmentScalarWhereInput[]
  id?: Prisma.IntFilter<"TranslationApprovment"> | number
  isActive?: Prisma.BoolFilter<"TranslationApprovment"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TranslationApprovment"> | Date | string
  translationId?: Prisma.IntFilter<"TranslationApprovment"> | number
  userId?: Prisma.StringNullableFilter<"TranslationApprovment"> | string | null
}

export type TranslationApprovmentCreateWithoutUserInput = {
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  Translation: Prisma.TranslationCreateNestedOneWithoutApprovmentsInput
}

export type TranslationApprovmentUncheckedCreateWithoutUserInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
}

export type TranslationApprovmentCreateOrConnectWithoutUserInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput>
}

export type TranslationApprovmentCreateManyUserInputEnvelope = {
  data: Prisma.TranslationApprovmentCreateManyUserInput | Prisma.TranslationApprovmentCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type TranslationApprovmentUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslationApprovmentUpdateWithoutUserInput, Prisma.TranslationApprovmentUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.TranslationApprovmentCreateWithoutUserInput, Prisma.TranslationApprovmentUncheckedCreateWithoutUserInput>
}

export type TranslationApprovmentUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.TranslationApprovmentWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateWithoutUserInput, Prisma.TranslationApprovmentUncheckedUpdateWithoutUserInput>
}

export type TranslationApprovmentUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.TranslationApprovmentScalarWhereInput
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateManyMutationInput, Prisma.TranslationApprovmentUncheckedUpdateManyWithoutUserInput>
}

export type TranslationApprovmentCreateManyTranslationInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  userId?: string | null
}

export type TranslationApprovmentUpdateWithoutTranslationInput = {
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  User?: Prisma.UserUpdateOneWithoutTranslationApprovmentsNestedInput
}

export type TranslationApprovmentUncheckedUpdateWithoutTranslationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TranslationApprovmentUncheckedUpdateManyWithoutTranslationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TranslationApprovmentCreateManyUserInput = {
  id?: number
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  translationId: number
}

export type TranslationApprovmentUpdateWithoutUserInput = {
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Translation?: Prisma.TranslationUpdateOneRequiredWithoutApprovmentsNestedInput
}

export type TranslationApprovmentUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslationApprovmentUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translationId?: Prisma.IntFieldUpdateOperationsInput | number
}



export type TranslationApprovmentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  translationId?: boolean
  userId?: boolean
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}, ExtArgs["result"]["translationApprovment"]>

export type TranslationApprovmentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  translationId?: boolean
  userId?: boolean
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}, ExtArgs["result"]["translationApprovment"]>

export type TranslationApprovmentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  translationId?: boolean
  userId?: boolean
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}, ExtArgs["result"]["translationApprovment"]>

export type TranslationApprovmentSelectScalar = {
  id?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  translationId?: boolean
  userId?: boolean
}

export type TranslationApprovmentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "isActive" | "createdAt" | "updatedAt" | "translationId" | "userId", ExtArgs["result"]["translationApprovment"]>
export type TranslationApprovmentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}
export type TranslationApprovmentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}
export type TranslationApprovmentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Translation?: boolean | Prisma.TranslationDefaultArgs<ExtArgs>
  User?: boolean | Prisma.TranslationApprovment$UserArgs<ExtArgs>
}

export type $TranslationApprovmentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TranslationApprovment"
  objects: {
    Translation: Prisma.$TranslationPayload<ExtArgs>
    User: Prisma.$UserPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    translationId: number
    userId: string | null
  }, ExtArgs["result"]["translationApprovment"]>
  composites: {}
}

export type TranslationApprovmentGetPayload<S extends boolean | null | undefined | TranslationApprovmentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload, S>

export type TranslationApprovmentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TranslationApprovmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TranslationApprovmentCountAggregateInputType | true
  }

export interface TranslationApprovmentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TranslationApprovment'], meta: { name: 'TranslationApprovment' } }
  /**
   * Find zero or one TranslationApprovment that matches the filter.
   * @param {TranslationApprovmentFindUniqueArgs} args - Arguments to find a TranslationApprovment
   * @example
   * // Get one TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TranslationApprovmentFindUniqueArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TranslationApprovment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TranslationApprovmentFindUniqueOrThrowArgs} args - Arguments to find a TranslationApprovment
   * @example
   * // Get one TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TranslationApprovmentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslationApprovment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentFindFirstArgs} args - Arguments to find a TranslationApprovment
   * @example
   * // Get one TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TranslationApprovmentFindFirstArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentFindFirstArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslationApprovment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentFindFirstOrThrowArgs} args - Arguments to find a TranslationApprovment
   * @example
   * // Get one TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TranslationApprovmentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TranslationApprovments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TranslationApprovments
   * const translationApprovments = await prisma.translationApprovment.findMany()
   * 
   * // Get first 10 TranslationApprovments
   * const translationApprovments = await prisma.translationApprovment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const translationApprovmentWithIdOnly = await prisma.translationApprovment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TranslationApprovmentFindManyArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TranslationApprovment.
   * @param {TranslationApprovmentCreateArgs} args - Arguments to create a TranslationApprovment.
   * @example
   * // Create one TranslationApprovment
   * const TranslationApprovment = await prisma.translationApprovment.create({
   *   data: {
   *     // ... data to create a TranslationApprovment
   *   }
   * })
   * 
   */
  create<T extends TranslationApprovmentCreateArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentCreateArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TranslationApprovments.
   * @param {TranslationApprovmentCreateManyArgs} args - Arguments to create many TranslationApprovments.
   * @example
   * // Create many TranslationApprovments
   * const translationApprovment = await prisma.translationApprovment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TranslationApprovmentCreateManyArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TranslationApprovments and returns the data saved in the database.
   * @param {TranslationApprovmentCreateManyAndReturnArgs} args - Arguments to create many TranslationApprovments.
   * @example
   * // Create many TranslationApprovments
   * const translationApprovment = await prisma.translationApprovment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TranslationApprovments and only return the `id`
   * const translationApprovmentWithIdOnly = await prisma.translationApprovment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TranslationApprovmentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TranslationApprovment.
   * @param {TranslationApprovmentDeleteArgs} args - Arguments to delete one TranslationApprovment.
   * @example
   * // Delete one TranslationApprovment
   * const TranslationApprovment = await prisma.translationApprovment.delete({
   *   where: {
   *     // ... filter to delete one TranslationApprovment
   *   }
   * })
   * 
   */
  delete<T extends TranslationApprovmentDeleteArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentDeleteArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TranslationApprovment.
   * @param {TranslationApprovmentUpdateArgs} args - Arguments to update one TranslationApprovment.
   * @example
   * // Update one TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TranslationApprovmentUpdateArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentUpdateArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TranslationApprovments.
   * @param {TranslationApprovmentDeleteManyArgs} args - Arguments to filter TranslationApprovments to delete.
   * @example
   * // Delete a few TranslationApprovments
   * const { count } = await prisma.translationApprovment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TranslationApprovmentDeleteManyArgs>(args?: Prisma.SelectSubset<T, TranslationApprovmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslationApprovments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TranslationApprovments
   * const translationApprovment = await prisma.translationApprovment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TranslationApprovmentUpdateManyArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslationApprovments and returns the data updated in the database.
   * @param {TranslationApprovmentUpdateManyAndReturnArgs} args - Arguments to update many TranslationApprovments.
   * @example
   * // Update many TranslationApprovments
   * const translationApprovment = await prisma.translationApprovment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TranslationApprovments and only return the `id`
   * const translationApprovmentWithIdOnly = await prisma.translationApprovment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TranslationApprovmentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TranslationApprovment.
   * @param {TranslationApprovmentUpsertArgs} args - Arguments to update or create a TranslationApprovment.
   * @example
   * // Update or create a TranslationApprovment
   * const translationApprovment = await prisma.translationApprovment.upsert({
   *   create: {
   *     // ... data to create a TranslationApprovment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TranslationApprovment we want to update
   *   }
   * })
   */
  upsert<T extends TranslationApprovmentUpsertArgs>(args: Prisma.SelectSubset<T, TranslationApprovmentUpsertArgs<ExtArgs>>): Prisma.Prisma__TranslationApprovmentClient<runtime.Types.Result.GetResult<Prisma.$TranslationApprovmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TranslationApprovments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentCountArgs} args - Arguments to filter TranslationApprovments to count.
   * @example
   * // Count the number of TranslationApprovments
   * const count = await prisma.translationApprovment.count({
   *   where: {
   *     // ... the filter for the TranslationApprovments we want to count
   *   }
   * })
  **/
  count<T extends TranslationApprovmentCountArgs>(
    args?: Prisma.Subset<T, TranslationApprovmentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TranslationApprovmentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TranslationApprovment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TranslationApprovmentAggregateArgs>(args: Prisma.Subset<T, TranslationApprovmentAggregateArgs>): Prisma.PrismaPromise<GetTranslationApprovmentAggregateType<T>>

  /**
   * Group by TranslationApprovment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslationApprovmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TranslationApprovmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TranslationApprovmentGroupByArgs['orderBy'] }
      : { orderBy?: TranslationApprovmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TranslationApprovmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTranslationApprovmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TranslationApprovment model
 */
readonly fields: TranslationApprovmentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TranslationApprovment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TranslationApprovmentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Translation<T extends Prisma.TranslationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TranslationDefaultArgs<ExtArgs>>): Prisma.Prisma__TranslationClient<runtime.Types.Result.GetResult<Prisma.$TranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  User<T extends Prisma.TranslationApprovment$UserArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TranslationApprovment$UserArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TranslationApprovment model
 */
export interface TranslationApprovmentFieldRefs {
  readonly id: Prisma.FieldRef<"TranslationApprovment", 'Int'>
  readonly isActive: Prisma.FieldRef<"TranslationApprovment", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"TranslationApprovment", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TranslationApprovment", 'DateTime'>
  readonly translationId: Prisma.FieldRef<"TranslationApprovment", 'Int'>
  readonly userId: Prisma.FieldRef<"TranslationApprovment", 'String'>
}
    

// Custom InputTypes
/**
 * TranslationApprovment findUnique
 */
export type TranslationApprovmentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter, which TranslationApprovment to fetch.
   */
  where: Prisma.TranslationApprovmentWhereUniqueInput
}

/**
 * TranslationApprovment findUniqueOrThrow
 */
export type TranslationApprovmentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter, which TranslationApprovment to fetch.
   */
  where: Prisma.TranslationApprovmentWhereUniqueInput
}

/**
 * TranslationApprovment findFirst
 */
export type TranslationApprovmentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter, which TranslationApprovment to fetch.
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationApprovments to fetch.
   */
  orderBy?: Prisma.TranslationApprovmentOrderByWithRelationInput | Prisma.TranslationApprovmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslationApprovments.
   */
  cursor?: Prisma.TranslationApprovmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationApprovments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationApprovments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslationApprovments.
   */
  distinct?: Prisma.TranslationApprovmentScalarFieldEnum | Prisma.TranslationApprovmentScalarFieldEnum[]
}

/**
 * TranslationApprovment findFirstOrThrow
 */
export type TranslationApprovmentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter, which TranslationApprovment to fetch.
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationApprovments to fetch.
   */
  orderBy?: Prisma.TranslationApprovmentOrderByWithRelationInput | Prisma.TranslationApprovmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslationApprovments.
   */
  cursor?: Prisma.TranslationApprovmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationApprovments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationApprovments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslationApprovments.
   */
  distinct?: Prisma.TranslationApprovmentScalarFieldEnum | Prisma.TranslationApprovmentScalarFieldEnum[]
}

/**
 * TranslationApprovment findMany
 */
export type TranslationApprovmentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter, which TranslationApprovments to fetch.
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslationApprovments to fetch.
   */
  orderBy?: Prisma.TranslationApprovmentOrderByWithRelationInput | Prisma.TranslationApprovmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TranslationApprovments.
   */
  cursor?: Prisma.TranslationApprovmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslationApprovments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslationApprovments.
   */
  skip?: number
  distinct?: Prisma.TranslationApprovmentScalarFieldEnum | Prisma.TranslationApprovmentScalarFieldEnum[]
}

/**
 * TranslationApprovment create
 */
export type TranslationApprovmentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * The data needed to create a TranslationApprovment.
   */
  data: Prisma.XOR<Prisma.TranslationApprovmentCreateInput, Prisma.TranslationApprovmentUncheckedCreateInput>
}

/**
 * TranslationApprovment createMany
 */
export type TranslationApprovmentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TranslationApprovments.
   */
  data: Prisma.TranslationApprovmentCreateManyInput | Prisma.TranslationApprovmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TranslationApprovment createManyAndReturn
 */
export type TranslationApprovmentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * The data used to create many TranslationApprovments.
   */
  data: Prisma.TranslationApprovmentCreateManyInput | Prisma.TranslationApprovmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TranslationApprovment update
 */
export type TranslationApprovmentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * The data needed to update a TranslationApprovment.
   */
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateInput, Prisma.TranslationApprovmentUncheckedUpdateInput>
  /**
   * Choose, which TranslationApprovment to update.
   */
  where: Prisma.TranslationApprovmentWhereUniqueInput
}

/**
 * TranslationApprovment updateMany
 */
export type TranslationApprovmentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TranslationApprovments.
   */
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateManyMutationInput, Prisma.TranslationApprovmentUncheckedUpdateManyInput>
  /**
   * Filter which TranslationApprovments to update
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * Limit how many TranslationApprovments to update.
   */
  limit?: number
}

/**
 * TranslationApprovment updateManyAndReturn
 */
export type TranslationApprovmentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * The data used to update TranslationApprovments.
   */
  data: Prisma.XOR<Prisma.TranslationApprovmentUpdateManyMutationInput, Prisma.TranslationApprovmentUncheckedUpdateManyInput>
  /**
   * Filter which TranslationApprovments to update
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * Limit how many TranslationApprovments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TranslationApprovment upsert
 */
export type TranslationApprovmentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * The filter to search for the TranslationApprovment to update in case it exists.
   */
  where: Prisma.TranslationApprovmentWhereUniqueInput
  /**
   * In case the TranslationApprovment found by the `where` argument doesn't exist, create a new TranslationApprovment with this data.
   */
  create: Prisma.XOR<Prisma.TranslationApprovmentCreateInput, Prisma.TranslationApprovmentUncheckedCreateInput>
  /**
   * In case the TranslationApprovment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TranslationApprovmentUpdateInput, Prisma.TranslationApprovmentUncheckedUpdateInput>
}

/**
 * TranslationApprovment delete
 */
export type TranslationApprovmentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
  /**
   * Filter which TranslationApprovment to delete.
   */
  where: Prisma.TranslationApprovmentWhereUniqueInput
}

/**
 * TranslationApprovment deleteMany
 */
export type TranslationApprovmentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslationApprovments to delete
   */
  where?: Prisma.TranslationApprovmentWhereInput
  /**
   * Limit how many TranslationApprovments to delete.
   */
  limit?: number
}

/**
 * TranslationApprovment.User
 */
export type TranslationApprovment$UserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * TranslationApprovment without action
 */
export type TranslationApprovmentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslationApprovment
   */
  select?: Prisma.TranslationApprovmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslationApprovment
   */
  omit?: Prisma.TranslationApprovmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationApprovmentInclude<ExtArgs> | null
}
