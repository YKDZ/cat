
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Plugin` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Plugin
 * 
 */
export type PluginModel = runtime.Types.Result.DefaultSelection<Prisma.$PluginPayload>

export type AggregatePlugin = {
  _count: PluginCountAggregateOutputType | null
  _min: PluginMinAggregateOutputType | null
  _max: PluginMaxAggregateOutputType | null
}

export type PluginMinAggregateOutputType = {
  id: string | null
  name: string | null
  overview: string | null
  enabled: boolean | null
  isExternal: boolean | null
  entry: string | null
  iconURL: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PluginMaxAggregateOutputType = {
  id: string | null
  name: string | null
  overview: string | null
  enabled: boolean | null
  isExternal: boolean | null
  entry: string | null
  iconURL: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PluginCountAggregateOutputType = {
  id: number
  origin: number
  name: number
  overview: number
  enabled: number
  isExternal: number
  entry: number
  iconURL: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type PluginMinAggregateInputType = {
  id?: true
  name?: true
  overview?: true
  enabled?: true
  isExternal?: true
  entry?: true
  iconURL?: true
  createdAt?: true
  updatedAt?: true
}

export type PluginMaxAggregateInputType = {
  id?: true
  name?: true
  overview?: true
  enabled?: true
  isExternal?: true
  entry?: true
  iconURL?: true
  createdAt?: true
  updatedAt?: true
}

export type PluginCountAggregateInputType = {
  id?: true
  origin?: true
  name?: true
  overview?: true
  enabled?: true
  isExternal?: true
  entry?: true
  iconURL?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type PluginAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Plugin to aggregate.
   */
  where?: Prisma.PluginWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Plugins to fetch.
   */
  orderBy?: Prisma.PluginOrderByWithRelationInput | Prisma.PluginOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PluginWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Plugins from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Plugins.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Plugins
  **/
  _count?: true | PluginCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PluginMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PluginMaxAggregateInputType
}

export type GetPluginAggregateType<T extends PluginAggregateArgs> = {
      [P in keyof T & keyof AggregatePlugin]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePlugin[P]>
    : Prisma.GetScalarType<T[P], AggregatePlugin[P]>
}




export type PluginGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PluginWhereInput
  orderBy?: Prisma.PluginOrderByWithAggregationInput | Prisma.PluginOrderByWithAggregationInput[]
  by: Prisma.PluginScalarFieldEnum[] | Prisma.PluginScalarFieldEnum
  having?: Prisma.PluginScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PluginCountAggregateInputType | true
  _min?: PluginMinAggregateInputType
  _max?: PluginMaxAggregateInputType
}

export type PluginGroupByOutputType = {
  id: string
  origin: unknown
  name: string
  overview: string | null
  enabled: boolean
  isExternal: boolean
  entry: string
  iconURL: string | null
  createdAt: Date
  updatedAt: Date
  _count: PluginCountAggregateOutputType | null
  _min: PluginMinAggregateOutputType | null
  _max: PluginMaxAggregateOutputType | null
}

type GetPluginGroupByPayload<T extends PluginGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PluginGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PluginGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PluginGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PluginGroupByOutputType[P]>
      }
    >
  > 



export type PluginWhereInput = {
  AND?: Prisma.PluginWhereInput | Prisma.PluginWhereInput[]
  OR?: Prisma.PluginWhereInput[]
  NOT?: Prisma.PluginWhereInput | Prisma.PluginWhereInput[]
  id?: Prisma.StringFilter<"Plugin"> | string
  origin?: Prisma.JsonFilter<"Plugin">
  name?: Prisma.StringFilter<"Plugin"> | string
  overview?: Prisma.StringNullableFilter<"Plugin"> | string | null
  enabled?: Prisma.BoolFilter<"Plugin"> | boolean
  isExternal?: Prisma.BoolFilter<"Plugin"> | boolean
  entry?: Prisma.StringFilter<"Plugin"> | string
  iconURL?: Prisma.StringNullableFilter<"Plugin"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
  Configs?: Prisma.PluginConfigListRelationFilter
  Permissions?: Prisma.PluginPermissionListRelationFilter
  Versions?: Prisma.PluginVersionListRelationFilter
  Tags?: Prisma.PluginTagListRelationFilter
}

export type PluginOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  origin?: Prisma.SortOrder
  name?: Prisma.SortOrder
  overview?: Prisma.SortOrderInput | Prisma.SortOrder
  enabled?: Prisma.SortOrder
  isExternal?: Prisma.SortOrder
  entry?: Prisma.SortOrder
  iconURL?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  Configs?: Prisma.PluginConfigOrderByRelationAggregateInput
  Permissions?: Prisma.PluginPermissionOrderByRelationAggregateInput
  Versions?: Prisma.PluginVersionOrderByRelationAggregateInput
  Tags?: Prisma.PluginTagOrderByRelationAggregateInput
  _relevance?: Prisma.PluginOrderByRelevanceInput
}

export type PluginWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PluginWhereInput | Prisma.PluginWhereInput[]
  OR?: Prisma.PluginWhereInput[]
  NOT?: Prisma.PluginWhereInput | Prisma.PluginWhereInput[]
  origin?: Prisma.JsonFilter<"Plugin">
  name?: Prisma.StringFilter<"Plugin"> | string
  overview?: Prisma.StringNullableFilter<"Plugin"> | string | null
  enabled?: Prisma.BoolFilter<"Plugin"> | boolean
  isExternal?: Prisma.BoolFilter<"Plugin"> | boolean
  entry?: Prisma.StringFilter<"Plugin"> | string
  iconURL?: Prisma.StringNullableFilter<"Plugin"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
  Configs?: Prisma.PluginConfigListRelationFilter
  Permissions?: Prisma.PluginPermissionListRelationFilter
  Versions?: Prisma.PluginVersionListRelationFilter
  Tags?: Prisma.PluginTagListRelationFilter
}, "id">

export type PluginOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  origin?: Prisma.SortOrder
  name?: Prisma.SortOrder
  overview?: Prisma.SortOrderInput | Prisma.SortOrder
  enabled?: Prisma.SortOrder
  isExternal?: Prisma.SortOrder
  entry?: Prisma.SortOrder
  iconURL?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.PluginCountOrderByAggregateInput
  _max?: Prisma.PluginMaxOrderByAggregateInput
  _min?: Prisma.PluginMinOrderByAggregateInput
}

export type PluginScalarWhereWithAggregatesInput = {
  AND?: Prisma.PluginScalarWhereWithAggregatesInput | Prisma.PluginScalarWhereWithAggregatesInput[]
  OR?: Prisma.PluginScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PluginScalarWhereWithAggregatesInput | Prisma.PluginScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Plugin"> | string
  origin?: Prisma.JsonWithAggregatesFilter<"Plugin">
  name?: Prisma.StringWithAggregatesFilter<"Plugin"> | string
  overview?: Prisma.StringNullableWithAggregatesFilter<"Plugin"> | string | null
  enabled?: Prisma.BoolWithAggregatesFilter<"Plugin"> | boolean
  isExternal?: Prisma.BoolWithAggregatesFilter<"Plugin"> | boolean
  entry?: Prisma.StringWithAggregatesFilter<"Plugin"> | string
  iconURL?: Prisma.StringNullableWithAggregatesFilter<"Plugin"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Plugin"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Plugin"> | Date | string
}

export type PluginCreateInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagCreateNestedManyWithoutPluginInput
}

export type PluginUncheckedCreateInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigUncheckedCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionUncheckedCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionUncheckedCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagUncheckedCreateNestedManyWithoutPluginInput
}

export type PluginUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUncheckedUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUncheckedUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUncheckedUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUncheckedUpdateManyWithoutPluginNestedInput
}

export type PluginCreateManyInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PluginUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PluginUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PluginOrderByRelevanceInput = {
  fields: Prisma.PluginOrderByRelevanceFieldEnum | Prisma.PluginOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type PluginCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  origin?: Prisma.SortOrder
  name?: Prisma.SortOrder
  overview?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  isExternal?: Prisma.SortOrder
  entry?: Prisma.SortOrder
  iconURL?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PluginMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  overview?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  isExternal?: Prisma.SortOrder
  entry?: Prisma.SortOrder
  iconURL?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PluginMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  overview?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  isExternal?: Prisma.SortOrder
  entry?: Prisma.SortOrder
  iconURL?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PluginScalarRelationFilter = {
  is?: Prisma.PluginWhereInput
  isNot?: Prisma.PluginWhereInput
}

export type PluginListRelationFilter = {
  every?: Prisma.PluginWhereInput
  some?: Prisma.PluginWhereInput
  none?: Prisma.PluginWhereInput
}

export type PluginOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PluginCreateNestedOneWithoutVersionsInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutVersionsInput, Prisma.PluginUncheckedCreateWithoutVersionsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutVersionsInput
  connect?: Prisma.PluginWhereUniqueInput
}

export type PluginUpdateOneRequiredWithoutVersionsNestedInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutVersionsInput, Prisma.PluginUncheckedCreateWithoutVersionsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutVersionsInput
  upsert?: Prisma.PluginUpsertWithoutVersionsInput
  connect?: Prisma.PluginWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PluginUpdateToOneWithWhereWithoutVersionsInput, Prisma.PluginUpdateWithoutVersionsInput>, Prisma.PluginUncheckedUpdateWithoutVersionsInput>
}

export type PluginCreateNestedOneWithoutPermissionsInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutPermissionsInput, Prisma.PluginUncheckedCreateWithoutPermissionsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutPermissionsInput
  connect?: Prisma.PluginWhereUniqueInput
}

export type PluginUpdateOneRequiredWithoutPermissionsNestedInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutPermissionsInput, Prisma.PluginUncheckedCreateWithoutPermissionsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutPermissionsInput
  upsert?: Prisma.PluginUpsertWithoutPermissionsInput
  connect?: Prisma.PluginWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PluginUpdateToOneWithWhereWithoutPermissionsInput, Prisma.PluginUpdateWithoutPermissionsInput>, Prisma.PluginUncheckedUpdateWithoutPermissionsInput>
}

export type PluginCreateNestedOneWithoutConfigsInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutConfigsInput, Prisma.PluginUncheckedCreateWithoutConfigsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutConfigsInput
  connect?: Prisma.PluginWhereUniqueInput
}

export type PluginUpdateOneRequiredWithoutConfigsNestedInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutConfigsInput, Prisma.PluginUncheckedCreateWithoutConfigsInput>
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutConfigsInput
  upsert?: Prisma.PluginUpsertWithoutConfigsInput
  connect?: Prisma.PluginWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PluginUpdateToOneWithWhereWithoutConfigsInput, Prisma.PluginUpdateWithoutConfigsInput>, Prisma.PluginUncheckedUpdateWithoutConfigsInput>
}

export type PluginCreateNestedManyWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput> | Prisma.PluginCreateWithoutTagsInput[] | Prisma.PluginUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutTagsInput | Prisma.PluginCreateOrConnectWithoutTagsInput[]
  connect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
}

export type PluginUncheckedCreateNestedManyWithoutTagsInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput> | Prisma.PluginCreateWithoutTagsInput[] | Prisma.PluginUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutTagsInput | Prisma.PluginCreateOrConnectWithoutTagsInput[]
  connect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
}

export type PluginUpdateManyWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput> | Prisma.PluginCreateWithoutTagsInput[] | Prisma.PluginUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutTagsInput | Prisma.PluginCreateOrConnectWithoutTagsInput[]
  upsert?: Prisma.PluginUpsertWithWhereUniqueWithoutTagsInput | Prisma.PluginUpsertWithWhereUniqueWithoutTagsInput[]
  set?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  disconnect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  delete?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  connect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  update?: Prisma.PluginUpdateWithWhereUniqueWithoutTagsInput | Prisma.PluginUpdateWithWhereUniqueWithoutTagsInput[]
  updateMany?: Prisma.PluginUpdateManyWithWhereWithoutTagsInput | Prisma.PluginUpdateManyWithWhereWithoutTagsInput[]
  deleteMany?: Prisma.PluginScalarWhereInput | Prisma.PluginScalarWhereInput[]
}

export type PluginUncheckedUpdateManyWithoutTagsNestedInput = {
  create?: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput> | Prisma.PluginCreateWithoutTagsInput[] | Prisma.PluginUncheckedCreateWithoutTagsInput[]
  connectOrCreate?: Prisma.PluginCreateOrConnectWithoutTagsInput | Prisma.PluginCreateOrConnectWithoutTagsInput[]
  upsert?: Prisma.PluginUpsertWithWhereUniqueWithoutTagsInput | Prisma.PluginUpsertWithWhereUniqueWithoutTagsInput[]
  set?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  disconnect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  delete?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  connect?: Prisma.PluginWhereUniqueInput | Prisma.PluginWhereUniqueInput[]
  update?: Prisma.PluginUpdateWithWhereUniqueWithoutTagsInput | Prisma.PluginUpdateWithWhereUniqueWithoutTagsInput[]
  updateMany?: Prisma.PluginUpdateManyWithWhereWithoutTagsInput | Prisma.PluginUpdateManyWithWhereWithoutTagsInput[]
  deleteMany?: Prisma.PluginScalarWhereInput | Prisma.PluginScalarWhereInput[]
}

export type PluginCreateWithoutVersionsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagCreateNestedManyWithoutPluginInput
}

export type PluginUncheckedCreateWithoutVersionsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigUncheckedCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionUncheckedCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagUncheckedCreateNestedManyWithoutPluginInput
}

export type PluginCreateOrConnectWithoutVersionsInput = {
  where: Prisma.PluginWhereUniqueInput
  create: Prisma.XOR<Prisma.PluginCreateWithoutVersionsInput, Prisma.PluginUncheckedCreateWithoutVersionsInput>
}

export type PluginUpsertWithoutVersionsInput = {
  update: Prisma.XOR<Prisma.PluginUpdateWithoutVersionsInput, Prisma.PluginUncheckedUpdateWithoutVersionsInput>
  create: Prisma.XOR<Prisma.PluginCreateWithoutVersionsInput, Prisma.PluginUncheckedCreateWithoutVersionsInput>
  where?: Prisma.PluginWhereInput
}

export type PluginUpdateToOneWithWhereWithoutVersionsInput = {
  where?: Prisma.PluginWhereInput
  data: Prisma.XOR<Prisma.PluginUpdateWithoutVersionsInput, Prisma.PluginUncheckedUpdateWithoutVersionsInput>
}

export type PluginUpdateWithoutVersionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateWithoutVersionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUncheckedUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUncheckedUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUncheckedUpdateManyWithoutPluginNestedInput
}

export type PluginCreateWithoutPermissionsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagCreateNestedManyWithoutPluginInput
}

export type PluginUncheckedCreateWithoutPermissionsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigUncheckedCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionUncheckedCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagUncheckedCreateNestedManyWithoutPluginInput
}

export type PluginCreateOrConnectWithoutPermissionsInput = {
  where: Prisma.PluginWhereUniqueInput
  create: Prisma.XOR<Prisma.PluginCreateWithoutPermissionsInput, Prisma.PluginUncheckedCreateWithoutPermissionsInput>
}

export type PluginUpsertWithoutPermissionsInput = {
  update: Prisma.XOR<Prisma.PluginUpdateWithoutPermissionsInput, Prisma.PluginUncheckedUpdateWithoutPermissionsInput>
  create: Prisma.XOR<Prisma.PluginCreateWithoutPermissionsInput, Prisma.PluginUncheckedCreateWithoutPermissionsInput>
  where?: Prisma.PluginWhereInput
}

export type PluginUpdateToOneWithWhereWithoutPermissionsInput = {
  where?: Prisma.PluginWhereInput
  data: Prisma.XOR<Prisma.PluginUpdateWithoutPermissionsInput, Prisma.PluginUncheckedUpdateWithoutPermissionsInput>
}

export type PluginUpdateWithoutPermissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateWithoutPermissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUncheckedUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUncheckedUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUncheckedUpdateManyWithoutPluginNestedInput
}

export type PluginCreateWithoutConfigsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Permissions?: Prisma.PluginPermissionCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagCreateNestedManyWithoutPluginInput
}

export type PluginUncheckedCreateWithoutConfigsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Permissions?: Prisma.PluginPermissionUncheckedCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionUncheckedCreateNestedManyWithoutPluginInput
  Tags?: Prisma.PluginTagUncheckedCreateNestedManyWithoutPluginInput
}

export type PluginCreateOrConnectWithoutConfigsInput = {
  where: Prisma.PluginWhereUniqueInput
  create: Prisma.XOR<Prisma.PluginCreateWithoutConfigsInput, Prisma.PluginUncheckedCreateWithoutConfigsInput>
}

export type PluginUpsertWithoutConfigsInput = {
  update: Prisma.XOR<Prisma.PluginUpdateWithoutConfigsInput, Prisma.PluginUncheckedUpdateWithoutConfigsInput>
  create: Prisma.XOR<Prisma.PluginCreateWithoutConfigsInput, Prisma.PluginUncheckedCreateWithoutConfigsInput>
  where?: Prisma.PluginWhereInput
}

export type PluginUpdateToOneWithWhereWithoutConfigsInput = {
  where?: Prisma.PluginWhereInput
  data: Prisma.XOR<Prisma.PluginUpdateWithoutConfigsInput, Prisma.PluginUncheckedUpdateWithoutConfigsInput>
}

export type PluginUpdateWithoutConfigsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Permissions?: Prisma.PluginPermissionUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateWithoutConfigsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Permissions?: Prisma.PluginPermissionUncheckedUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUncheckedUpdateManyWithoutPluginNestedInput
  Tags?: Prisma.PluginTagUncheckedUpdateManyWithoutPluginNestedInput
}

export type PluginCreateWithoutTagsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionCreateNestedManyWithoutPluginInput
}

export type PluginUncheckedCreateWithoutTagsInput = {
  id: string
  origin: unknown
  name: string
  overview?: string | null
  enabled?: boolean
  isExternal?: boolean
  entry: string
  iconURL?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  Configs?: Prisma.PluginConfigUncheckedCreateNestedManyWithoutPluginInput
  Permissions?: Prisma.PluginPermissionUncheckedCreateNestedManyWithoutPluginInput
  Versions?: Prisma.PluginVersionUncheckedCreateNestedManyWithoutPluginInput
}

export type PluginCreateOrConnectWithoutTagsInput = {
  where: Prisma.PluginWhereUniqueInput
  create: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput>
}

export type PluginUpsertWithWhereUniqueWithoutTagsInput = {
  where: Prisma.PluginWhereUniqueInput
  update: Prisma.XOR<Prisma.PluginUpdateWithoutTagsInput, Prisma.PluginUncheckedUpdateWithoutTagsInput>
  create: Prisma.XOR<Prisma.PluginCreateWithoutTagsInput, Prisma.PluginUncheckedCreateWithoutTagsInput>
}

export type PluginUpdateWithWhereUniqueWithoutTagsInput = {
  where: Prisma.PluginWhereUniqueInput
  data: Prisma.XOR<Prisma.PluginUpdateWithoutTagsInput, Prisma.PluginUncheckedUpdateWithoutTagsInput>
}

export type PluginUpdateManyWithWhereWithoutTagsInput = {
  where: Prisma.PluginScalarWhereInput
  data: Prisma.XOR<Prisma.PluginUpdateManyMutationInput, Prisma.PluginUncheckedUpdateManyWithoutTagsInput>
}

export type PluginScalarWhereInput = {
  AND?: Prisma.PluginScalarWhereInput | Prisma.PluginScalarWhereInput[]
  OR?: Prisma.PluginScalarWhereInput[]
  NOT?: Prisma.PluginScalarWhereInput | Prisma.PluginScalarWhereInput[]
  id?: Prisma.StringFilter<"Plugin"> | string
  origin?: Prisma.JsonFilter<"Plugin">
  name?: Prisma.StringFilter<"Plugin"> | string
  overview?: Prisma.StringNullableFilter<"Plugin"> | string | null
  enabled?: Prisma.BoolFilter<"Plugin"> | boolean
  isExternal?: Prisma.BoolFilter<"Plugin"> | boolean
  entry?: Prisma.StringFilter<"Plugin"> | string
  iconURL?: Prisma.StringNullableFilter<"Plugin"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Plugin"> | Date | string
}

export type PluginUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: unknown
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Configs?: Prisma.PluginConfigUncheckedUpdateManyWithoutPluginNestedInput
  Permissions?: Prisma.PluginPermissionUncheckedUpdateManyWithoutPluginNestedInput
  Versions?: Prisma.PluginVersionUncheckedUpdateManyWithoutPluginNestedInput
}

export type PluginUncheckedUpdateManyWithoutTagsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  origin?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  name?: Prisma.StringFieldUpdateOperationsInput | string
  overview?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isExternal?: Prisma.BoolFieldUpdateOperationsInput | boolean
  entry?: Prisma.StringFieldUpdateOperationsInput | string
  iconURL?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type PluginCountOutputType
 */

export type PluginCountOutputType = {
  Configs: number
  Permissions: number
  Versions: number
  Tags: number
}

export type PluginCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Configs?: boolean | PluginCountOutputTypeCountConfigsArgs
  Permissions?: boolean | PluginCountOutputTypeCountPermissionsArgs
  Versions?: boolean | PluginCountOutputTypeCountVersionsArgs
  Tags?: boolean | PluginCountOutputTypeCountTagsArgs
}

/**
 * PluginCountOutputType without action
 */
export type PluginCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PluginCountOutputType
   */
  select?: Prisma.PluginCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PluginCountOutputType without action
 */
export type PluginCountOutputTypeCountConfigsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PluginConfigWhereInput
}

/**
 * PluginCountOutputType without action
 */
export type PluginCountOutputTypeCountPermissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PluginPermissionWhereInput
}

/**
 * PluginCountOutputType without action
 */
export type PluginCountOutputTypeCountVersionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PluginVersionWhereInput
}

/**
 * PluginCountOutputType without action
 */
export type PluginCountOutputTypeCountTagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PluginTagWhereInput
}


export type PluginSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  origin?: boolean
  name?: boolean
  overview?: boolean
  enabled?: boolean
  isExternal?: boolean
  entry?: boolean
  iconURL?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Configs?: boolean | Prisma.Plugin$ConfigsArgs<ExtArgs>
  Permissions?: boolean | Prisma.Plugin$PermissionsArgs<ExtArgs>
  Versions?: boolean | Prisma.Plugin$VersionsArgs<ExtArgs>
  Tags?: boolean | Prisma.Plugin$TagsArgs<ExtArgs>
  _count?: boolean | Prisma.PluginCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["plugin"]>

export type PluginSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  origin?: boolean
  name?: boolean
  overview?: boolean
  enabled?: boolean
  isExternal?: boolean
  entry?: boolean
  iconURL?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["plugin"]>

export type PluginSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  origin?: boolean
  name?: boolean
  overview?: boolean
  enabled?: boolean
  isExternal?: boolean
  entry?: boolean
  iconURL?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["plugin"]>

export type PluginSelectScalar = {
  id?: boolean
  origin?: boolean
  name?: boolean
  overview?: boolean
  enabled?: boolean
  isExternal?: boolean
  entry?: boolean
  iconURL?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type PluginOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "origin" | "name" | "overview" | "enabled" | "isExternal" | "entry" | "iconURL" | "createdAt" | "updatedAt", ExtArgs["result"]["plugin"]>
export type PluginInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Configs?: boolean | Prisma.Plugin$ConfigsArgs<ExtArgs>
  Permissions?: boolean | Prisma.Plugin$PermissionsArgs<ExtArgs>
  Versions?: boolean | Prisma.Plugin$VersionsArgs<ExtArgs>
  Tags?: boolean | Prisma.Plugin$TagsArgs<ExtArgs>
  _count?: boolean | Prisma.PluginCountOutputTypeDefaultArgs<ExtArgs>
}
export type PluginIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type PluginIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $PluginPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Plugin"
  objects: {
    Configs: Prisma.$PluginConfigPayload<ExtArgs>[]
    Permissions: Prisma.$PluginPermissionPayload<ExtArgs>[]
    Versions: Prisma.$PluginVersionPayload<ExtArgs>[]
    Tags: Prisma.$PluginTagPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    origin: unknown
    name: string
    overview: string | null
    enabled: boolean
    isExternal: boolean
    entry: string
    iconURL: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["plugin"]>
  composites: {}
}

export type PluginGetPayload<S extends boolean | null | undefined | PluginDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PluginPayload, S>

export type PluginCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PluginFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PluginCountAggregateInputType | true
  }

export interface PluginDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Plugin'], meta: { name: 'Plugin' } }
  /**
   * Find zero or one Plugin that matches the filter.
   * @param {PluginFindUniqueArgs} args - Arguments to find a Plugin
   * @example
   * // Get one Plugin
   * const plugin = await prisma.plugin.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PluginFindUniqueArgs>(args: Prisma.SelectSubset<T, PluginFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Plugin that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PluginFindUniqueOrThrowArgs} args - Arguments to find a Plugin
   * @example
   * // Get one Plugin
   * const plugin = await prisma.plugin.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PluginFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PluginFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Plugin that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginFindFirstArgs} args - Arguments to find a Plugin
   * @example
   * // Get one Plugin
   * const plugin = await prisma.plugin.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PluginFindFirstArgs>(args?: Prisma.SelectSubset<T, PluginFindFirstArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Plugin that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginFindFirstOrThrowArgs} args - Arguments to find a Plugin
   * @example
   * // Get one Plugin
   * const plugin = await prisma.plugin.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PluginFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PluginFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Plugins that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Plugins
   * const plugins = await prisma.plugin.findMany()
   * 
   * // Get first 10 Plugins
   * const plugins = await prisma.plugin.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const pluginWithIdOnly = await prisma.plugin.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PluginFindManyArgs>(args?: Prisma.SelectSubset<T, PluginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Plugin.
   * @param {PluginCreateArgs} args - Arguments to create a Plugin.
   * @example
   * // Create one Plugin
   * const Plugin = await prisma.plugin.create({
   *   data: {
   *     // ... data to create a Plugin
   *   }
   * })
   * 
   */
  create<T extends PluginCreateArgs>(args: Prisma.SelectSubset<T, PluginCreateArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Plugins.
   * @param {PluginCreateManyArgs} args - Arguments to create many Plugins.
   * @example
   * // Create many Plugins
   * const plugin = await prisma.plugin.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PluginCreateManyArgs>(args?: Prisma.SelectSubset<T, PluginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Plugins and returns the data saved in the database.
   * @param {PluginCreateManyAndReturnArgs} args - Arguments to create many Plugins.
   * @example
   * // Create many Plugins
   * const plugin = await prisma.plugin.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Plugins and only return the `id`
   * const pluginWithIdOnly = await prisma.plugin.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PluginCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PluginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Plugin.
   * @param {PluginDeleteArgs} args - Arguments to delete one Plugin.
   * @example
   * // Delete one Plugin
   * const Plugin = await prisma.plugin.delete({
   *   where: {
   *     // ... filter to delete one Plugin
   *   }
   * })
   * 
   */
  delete<T extends PluginDeleteArgs>(args: Prisma.SelectSubset<T, PluginDeleteArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Plugin.
   * @param {PluginUpdateArgs} args - Arguments to update one Plugin.
   * @example
   * // Update one Plugin
   * const plugin = await prisma.plugin.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PluginUpdateArgs>(args: Prisma.SelectSubset<T, PluginUpdateArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Plugins.
   * @param {PluginDeleteManyArgs} args - Arguments to filter Plugins to delete.
   * @example
   * // Delete a few Plugins
   * const { count } = await prisma.plugin.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PluginDeleteManyArgs>(args?: Prisma.SelectSubset<T, PluginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Plugins.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Plugins
   * const plugin = await prisma.plugin.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PluginUpdateManyArgs>(args: Prisma.SelectSubset<T, PluginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Plugins and returns the data updated in the database.
   * @param {PluginUpdateManyAndReturnArgs} args - Arguments to update many Plugins.
   * @example
   * // Update many Plugins
   * const plugin = await prisma.plugin.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Plugins and only return the `id`
   * const pluginWithIdOnly = await prisma.plugin.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PluginUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PluginUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Plugin.
   * @param {PluginUpsertArgs} args - Arguments to update or create a Plugin.
   * @example
   * // Update or create a Plugin
   * const plugin = await prisma.plugin.upsert({
   *   create: {
   *     // ... data to create a Plugin
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Plugin we want to update
   *   }
   * })
   */
  upsert<T extends PluginUpsertArgs>(args: Prisma.SelectSubset<T, PluginUpsertArgs<ExtArgs>>): Prisma.Prisma__PluginClient<runtime.Types.Result.GetResult<Prisma.$PluginPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Plugins.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginCountArgs} args - Arguments to filter Plugins to count.
   * @example
   * // Count the number of Plugins
   * const count = await prisma.plugin.count({
   *   where: {
   *     // ... the filter for the Plugins we want to count
   *   }
   * })
  **/
  count<T extends PluginCountArgs>(
    args?: Prisma.Subset<T, PluginCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PluginCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Plugin.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PluginAggregateArgs>(args: Prisma.Subset<T, PluginAggregateArgs>): Prisma.PrismaPromise<GetPluginAggregateType<T>>

  /**
   * Group by Plugin.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PluginGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PluginGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PluginGroupByArgs['orderBy'] }
      : { orderBy?: PluginGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PluginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPluginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Plugin model
 */
readonly fields: PluginFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Plugin.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PluginClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Configs<T extends Prisma.Plugin$ConfigsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Plugin$ConfigsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Permissions<T extends Prisma.Plugin$PermissionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Plugin$PermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Versions<T extends Prisma.Plugin$VersionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Plugin$VersionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Tags<T extends Prisma.Plugin$TagsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Plugin$TagsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PluginTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Plugin model
 */
export interface PluginFieldRefs {
  readonly id: Prisma.FieldRef<"Plugin", 'String'>
  readonly origin: Prisma.FieldRef<"Plugin", 'Json'>
  readonly name: Prisma.FieldRef<"Plugin", 'String'>
  readonly overview: Prisma.FieldRef<"Plugin", 'String'>
  readonly enabled: Prisma.FieldRef<"Plugin", 'Boolean'>
  readonly isExternal: Prisma.FieldRef<"Plugin", 'Boolean'>
  readonly entry: Prisma.FieldRef<"Plugin", 'String'>
  readonly iconURL: Prisma.FieldRef<"Plugin", 'String'>
  readonly createdAt: Prisma.FieldRef<"Plugin", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Plugin", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Plugin findUnique
 */
export type PluginFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter, which Plugin to fetch.
   */
  where: Prisma.PluginWhereUniqueInput
}

/**
 * Plugin findUniqueOrThrow
 */
export type PluginFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter, which Plugin to fetch.
   */
  where: Prisma.PluginWhereUniqueInput
}

/**
 * Plugin findFirst
 */
export type PluginFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter, which Plugin to fetch.
   */
  where?: Prisma.PluginWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Plugins to fetch.
   */
  orderBy?: Prisma.PluginOrderByWithRelationInput | Prisma.PluginOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Plugins.
   */
  cursor?: Prisma.PluginWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Plugins from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Plugins.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Plugins.
   */
  distinct?: Prisma.PluginScalarFieldEnum | Prisma.PluginScalarFieldEnum[]
}

/**
 * Plugin findFirstOrThrow
 */
export type PluginFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter, which Plugin to fetch.
   */
  where?: Prisma.PluginWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Plugins to fetch.
   */
  orderBy?: Prisma.PluginOrderByWithRelationInput | Prisma.PluginOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Plugins.
   */
  cursor?: Prisma.PluginWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Plugins from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Plugins.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Plugins.
   */
  distinct?: Prisma.PluginScalarFieldEnum | Prisma.PluginScalarFieldEnum[]
}

/**
 * Plugin findMany
 */
export type PluginFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter, which Plugins to fetch.
   */
  where?: Prisma.PluginWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Plugins to fetch.
   */
  orderBy?: Prisma.PluginOrderByWithRelationInput | Prisma.PluginOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Plugins.
   */
  cursor?: Prisma.PluginWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Plugins from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Plugins.
   */
  skip?: number
  distinct?: Prisma.PluginScalarFieldEnum | Prisma.PluginScalarFieldEnum[]
}

/**
 * Plugin create
 */
export type PluginCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * The data needed to create a Plugin.
   */
  data: Prisma.XOR<Prisma.PluginCreateInput, Prisma.PluginUncheckedCreateInput>
}

/**
 * Plugin createMany
 */
export type PluginCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Plugins.
   */
  data: Prisma.PluginCreateManyInput | Prisma.PluginCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Plugin createManyAndReturn
 */
export type PluginCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * The data used to create many Plugins.
   */
  data: Prisma.PluginCreateManyInput | Prisma.PluginCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Plugin update
 */
export type PluginUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * The data needed to update a Plugin.
   */
  data: Prisma.XOR<Prisma.PluginUpdateInput, Prisma.PluginUncheckedUpdateInput>
  /**
   * Choose, which Plugin to update.
   */
  where: Prisma.PluginWhereUniqueInput
}

/**
 * Plugin updateMany
 */
export type PluginUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Plugins.
   */
  data: Prisma.XOR<Prisma.PluginUpdateManyMutationInput, Prisma.PluginUncheckedUpdateManyInput>
  /**
   * Filter which Plugins to update
   */
  where?: Prisma.PluginWhereInput
  /**
   * Limit how many Plugins to update.
   */
  limit?: number
}

/**
 * Plugin updateManyAndReturn
 */
export type PluginUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * The data used to update Plugins.
   */
  data: Prisma.XOR<Prisma.PluginUpdateManyMutationInput, Prisma.PluginUncheckedUpdateManyInput>
  /**
   * Filter which Plugins to update
   */
  where?: Prisma.PluginWhereInput
  /**
   * Limit how many Plugins to update.
   */
  limit?: number
}

/**
 * Plugin upsert
 */
export type PluginUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * The filter to search for the Plugin to update in case it exists.
   */
  where: Prisma.PluginWhereUniqueInput
  /**
   * In case the Plugin found by the `where` argument doesn't exist, create a new Plugin with this data.
   */
  create: Prisma.XOR<Prisma.PluginCreateInput, Prisma.PluginUncheckedCreateInput>
  /**
   * In case the Plugin was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PluginUpdateInput, Prisma.PluginUncheckedUpdateInput>
}

/**
 * Plugin delete
 */
export type PluginDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
  /**
   * Filter which Plugin to delete.
   */
  where: Prisma.PluginWhereUniqueInput
}

/**
 * Plugin deleteMany
 */
export type PluginDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Plugins to delete
   */
  where?: Prisma.PluginWhereInput
  /**
   * Limit how many Plugins to delete.
   */
  limit?: number
}

/**
 * Plugin.Configs
 */
export type Plugin$ConfigsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PluginConfig
   */
  select?: Prisma.PluginConfigSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PluginConfig
   */
  omit?: Prisma.PluginConfigOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginConfigInclude<ExtArgs> | null
  where?: Prisma.PluginConfigWhereInput
  orderBy?: Prisma.PluginConfigOrderByWithRelationInput | Prisma.PluginConfigOrderByWithRelationInput[]
  cursor?: Prisma.PluginConfigWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PluginConfigScalarFieldEnum | Prisma.PluginConfigScalarFieldEnum[]
}

/**
 * Plugin.Permissions
 */
export type Plugin$PermissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PluginPermission
   */
  select?: Prisma.PluginPermissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PluginPermission
   */
  omit?: Prisma.PluginPermissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginPermissionInclude<ExtArgs> | null
  where?: Prisma.PluginPermissionWhereInput
  orderBy?: Prisma.PluginPermissionOrderByWithRelationInput | Prisma.PluginPermissionOrderByWithRelationInput[]
  cursor?: Prisma.PluginPermissionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PluginPermissionScalarFieldEnum | Prisma.PluginPermissionScalarFieldEnum[]
}

/**
 * Plugin.Versions
 */
export type Plugin$VersionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PluginVersion
   */
  select?: Prisma.PluginVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PluginVersion
   */
  omit?: Prisma.PluginVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginVersionInclude<ExtArgs> | null
  where?: Prisma.PluginVersionWhereInput
  orderBy?: Prisma.PluginVersionOrderByWithRelationInput | Prisma.PluginVersionOrderByWithRelationInput[]
  cursor?: Prisma.PluginVersionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PluginVersionScalarFieldEnum | Prisma.PluginVersionScalarFieldEnum[]
}

/**
 * Plugin.Tags
 */
export type Plugin$TagsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PluginTag
   */
  select?: Prisma.PluginTagSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PluginTag
   */
  omit?: Prisma.PluginTagOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginTagInclude<ExtArgs> | null
  where?: Prisma.PluginTagWhereInput
  orderBy?: Prisma.PluginTagOrderByWithRelationInput | Prisma.PluginTagOrderByWithRelationInput[]
  cursor?: Prisma.PluginTagWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PluginTagScalarFieldEnum | Prisma.PluginTagScalarFieldEnum[]
}

/**
 * Plugin without action
 */
export type PluginDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Plugin
   */
  select?: Prisma.PluginSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Plugin
   */
  omit?: Prisma.PluginOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PluginInclude<ExtArgs> | null
}
