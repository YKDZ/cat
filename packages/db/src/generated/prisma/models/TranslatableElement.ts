
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TranslatableElement` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TranslatableElement
 * 
 */
export type TranslatableElementModel = runtime.Types.Result.DefaultSelection<Prisma.$TranslatableElementPayload>

export type AggregateTranslatableElement = {
  _count: TranslatableElementCountAggregateOutputType | null
  _avg: TranslatableElementAvgAggregateOutputType | null
  _sum: TranslatableElementSumAggregateOutputType | null
  _min: TranslatableElementMinAggregateOutputType | null
  _max: TranslatableElementMaxAggregateOutputType | null
}

export type TranslatableElementAvgAggregateOutputType = {
  id: number | null
  embeddingId: number | null
}

export type TranslatableElementSumAggregateOutputType = {
  id: number | null
  embeddingId: number | null
}

export type TranslatableElementMinAggregateOutputType = {
  id: number | null
  value: string | null
  documentId: string | null
  embeddingId: number | null
}

export type TranslatableElementMaxAggregateOutputType = {
  id: number | null
  value: string | null
  documentId: string | null
  embeddingId: number | null
}

export type TranslatableElementCountAggregateOutputType = {
  id: number
  value: number
  meta: number
  documentId: number
  embeddingId: number
  _all: number
}


export type TranslatableElementAvgAggregateInputType = {
  id?: true
  embeddingId?: true
}

export type TranslatableElementSumAggregateInputType = {
  id?: true
  embeddingId?: true
}

export type TranslatableElementMinAggregateInputType = {
  id?: true
  value?: true
  documentId?: true
  embeddingId?: true
}

export type TranslatableElementMaxAggregateInputType = {
  id?: true
  value?: true
  documentId?: true
  embeddingId?: true
}

export type TranslatableElementCountAggregateInputType = {
  id?: true
  value?: true
  meta?: true
  documentId?: true
  embeddingId?: true
  _all?: true
}

export type TranslatableElementAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslatableElement to aggregate.
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslatableElements to fetch.
   */
  orderBy?: Prisma.TranslatableElementOrderByWithRelationInput | Prisma.TranslatableElementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TranslatableElementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslatableElements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslatableElements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TranslatableElements
  **/
  _count?: true | TranslatableElementCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TranslatableElementAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TranslatableElementSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TranslatableElementMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TranslatableElementMaxAggregateInputType
}

export type GetTranslatableElementAggregateType<T extends TranslatableElementAggregateArgs> = {
      [P in keyof T & keyof AggregateTranslatableElement]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTranslatableElement[P]>
    : Prisma.GetScalarType<T[P], AggregateTranslatableElement[P]>
}




export type TranslatableElementGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TranslatableElementWhereInput
  orderBy?: Prisma.TranslatableElementOrderByWithAggregationInput | Prisma.TranslatableElementOrderByWithAggregationInput[]
  by: Prisma.TranslatableElementScalarFieldEnum[] | Prisma.TranslatableElementScalarFieldEnum
  having?: Prisma.TranslatableElementScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TranslatableElementCountAggregateInputType | true
  _avg?: TranslatableElementAvgAggregateInputType
  _sum?: TranslatableElementSumAggregateInputType
  _min?: TranslatableElementMinAggregateInputType
  _max?: TranslatableElementMaxAggregateInputType
}

export type TranslatableElementGroupByOutputType = {
  id: number
  value: string
  meta: unknown | null
  documentId: string
  embeddingId: number
  _count: TranslatableElementCountAggregateOutputType | null
  _avg: TranslatableElementAvgAggregateOutputType | null
  _sum: TranslatableElementSumAggregateOutputType | null
  _min: TranslatableElementMinAggregateOutputType | null
  _max: TranslatableElementMaxAggregateOutputType | null
}

type GetTranslatableElementGroupByPayload<T extends TranslatableElementGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TranslatableElementGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TranslatableElementGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TranslatableElementGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TranslatableElementGroupByOutputType[P]>
      }
    >
  > 



export type TranslatableElementWhereInput = {
  AND?: Prisma.TranslatableElementWhereInput | Prisma.TranslatableElementWhereInput[]
  OR?: Prisma.TranslatableElementWhereInput[]
  NOT?: Prisma.TranslatableElementWhereInput | Prisma.TranslatableElementWhereInput[]
  id?: Prisma.IntFilter<"TranslatableElement"> | number
  value?: Prisma.StringFilter<"TranslatableElement"> | string
  meta?: Prisma.JsonNullableFilter<"TranslatableElement">
  documentId?: Prisma.StringFilter<"TranslatableElement"> | string
  embeddingId?: Prisma.IntFilter<"TranslatableElement"> | number
  Document?: Prisma.XOR<Prisma.DocumentScalarRelationFilter, Prisma.DocumentWhereInput>
  Embedding?: Prisma.XOR<Prisma.VectorScalarRelationFilter, Prisma.VectorWhereInput>
  Translations?: Prisma.TranslationListRelationFilter
  MemoryItems?: Prisma.MemoryItemListRelationFilter
}

export type TranslatableElementOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  meta?: Prisma.SortOrderInput | Prisma.SortOrder
  documentId?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
  Document?: Prisma.DocumentOrderByWithRelationInput
  Embedding?: Prisma.VectorOrderByWithRelationInput
  Translations?: Prisma.TranslationOrderByRelationAggregateInput
  MemoryItems?: Prisma.MemoryItemOrderByRelationAggregateInput
  _relevance?: Prisma.TranslatableElementOrderByRelevanceInput
}

export type TranslatableElementWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.TranslatableElementWhereInput | Prisma.TranslatableElementWhereInput[]
  OR?: Prisma.TranslatableElementWhereInput[]
  NOT?: Prisma.TranslatableElementWhereInput | Prisma.TranslatableElementWhereInput[]
  value?: Prisma.StringFilter<"TranslatableElement"> | string
  meta?: Prisma.JsonNullableFilter<"TranslatableElement">
  documentId?: Prisma.StringFilter<"TranslatableElement"> | string
  embeddingId?: Prisma.IntFilter<"TranslatableElement"> | number
  Document?: Prisma.XOR<Prisma.DocumentScalarRelationFilter, Prisma.DocumentWhereInput>
  Embedding?: Prisma.XOR<Prisma.VectorScalarRelationFilter, Prisma.VectorWhereInput>
  Translations?: Prisma.TranslationListRelationFilter
  MemoryItems?: Prisma.MemoryItemListRelationFilter
}, "id">

export type TranslatableElementOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  meta?: Prisma.SortOrderInput | Prisma.SortOrder
  documentId?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
  _count?: Prisma.TranslatableElementCountOrderByAggregateInput
  _avg?: Prisma.TranslatableElementAvgOrderByAggregateInput
  _max?: Prisma.TranslatableElementMaxOrderByAggregateInput
  _min?: Prisma.TranslatableElementMinOrderByAggregateInput
  _sum?: Prisma.TranslatableElementSumOrderByAggregateInput
}

export type TranslatableElementScalarWhereWithAggregatesInput = {
  AND?: Prisma.TranslatableElementScalarWhereWithAggregatesInput | Prisma.TranslatableElementScalarWhereWithAggregatesInput[]
  OR?: Prisma.TranslatableElementScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TranslatableElementScalarWhereWithAggregatesInput | Prisma.TranslatableElementScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"TranslatableElement"> | number
  value?: Prisma.StringWithAggregatesFilter<"TranslatableElement"> | string
  meta?: Prisma.JsonNullableWithAggregatesFilter<"TranslatableElement">
  documentId?: Prisma.StringWithAggregatesFilter<"TranslatableElement"> | string
  embeddingId?: Prisma.IntWithAggregatesFilter<"TranslatableElement"> | number
}

export type TranslatableElementCreateInput = {
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document: Prisma.DocumentCreateNestedOneWithoutTranslatableElementsInput
  Embedding: Prisma.VectorCreateNestedOneWithoutTranslatableElementsInput
  Translations?: Prisma.TranslationCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementUncheckedCreateInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
  embeddingId: number
  Translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemUncheckedCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementUpdateInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document?: Prisma.DocumentUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Embedding?: Prisma.VectorUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Translations?: Prisma.TranslationUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
  Translations?: Prisma.TranslationUncheckedUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUncheckedUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementCreateManyInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
  embeddingId: number
}

export type TranslatableElementUpdateManyMutationInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
}

export type TranslatableElementUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslatableElementListRelationFilter = {
  every?: Prisma.TranslatableElementWhereInput
  some?: Prisma.TranslatableElementWhereInput
  none?: Prisma.TranslatableElementWhereInput
}

export type TranslatableElementOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TranslatableElementOrderByRelevanceInput = {
  fields: Prisma.TranslatableElementOrderByRelevanceFieldEnum | Prisma.TranslatableElementOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type TranslatableElementCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  meta?: Prisma.SortOrder
  documentId?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
}

export type TranslatableElementAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
}

export type TranslatableElementMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  documentId?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
}

export type TranslatableElementMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  value?: Prisma.SortOrder
  documentId?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
}

export type TranslatableElementSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  embeddingId?: Prisma.SortOrder
}

export type TranslatableElementNullableScalarRelationFilter = {
  is?: Prisma.TranslatableElementWhereInput | null
  isNot?: Prisma.TranslatableElementWhereInput | null
}

export type TranslatableElementScalarRelationFilter = {
  is?: Prisma.TranslatableElementWhereInput
  isNot?: Prisma.TranslatableElementWhereInput
}

export type TranslatableElementCreateNestedManyWithoutDocumentInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput> | Prisma.TranslatableElementCreateWithoutDocumentInput[] | Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput | Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput[]
  createMany?: Prisma.TranslatableElementCreateManyDocumentInputEnvelope
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
}

export type TranslatableElementUncheckedCreateNestedManyWithoutDocumentInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput> | Prisma.TranslatableElementCreateWithoutDocumentInput[] | Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput | Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput[]
  createMany?: Prisma.TranslatableElementCreateManyDocumentInputEnvelope
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
}

export type TranslatableElementUpdateManyWithoutDocumentNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput> | Prisma.TranslatableElementCreateWithoutDocumentInput[] | Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput | Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput[]
  upsert?: Prisma.TranslatableElementUpsertWithWhereUniqueWithoutDocumentInput | Prisma.TranslatableElementUpsertWithWhereUniqueWithoutDocumentInput[]
  createMany?: Prisma.TranslatableElementCreateManyDocumentInputEnvelope
  set?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  disconnect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  delete?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  update?: Prisma.TranslatableElementUpdateWithWhereUniqueWithoutDocumentInput | Prisma.TranslatableElementUpdateWithWhereUniqueWithoutDocumentInput[]
  updateMany?: Prisma.TranslatableElementUpdateManyWithWhereWithoutDocumentInput | Prisma.TranslatableElementUpdateManyWithWhereWithoutDocumentInput[]
  deleteMany?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
}

export type TranslatableElementUncheckedUpdateManyWithoutDocumentNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput> | Prisma.TranslatableElementCreateWithoutDocumentInput[] | Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput | Prisma.TranslatableElementCreateOrConnectWithoutDocumentInput[]
  upsert?: Prisma.TranslatableElementUpsertWithWhereUniqueWithoutDocumentInput | Prisma.TranslatableElementUpsertWithWhereUniqueWithoutDocumentInput[]
  createMany?: Prisma.TranslatableElementCreateManyDocumentInputEnvelope
  set?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  disconnect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  delete?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  update?: Prisma.TranslatableElementUpdateWithWhereUniqueWithoutDocumentInput | Prisma.TranslatableElementUpdateWithWhereUniqueWithoutDocumentInput[]
  updateMany?: Prisma.TranslatableElementUpdateManyWithWhereWithoutDocumentInput | Prisma.TranslatableElementUpdateManyWithWhereWithoutDocumentInput[]
  deleteMany?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type TranslatableElementCreateNestedOneWithoutMemoryItemsInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedCreateWithoutMemoryItemsInput>
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutMemoryItemsInput
  connect?: Prisma.TranslatableElementWhereUniqueInput
}

export type TranslatableElementUpdateOneWithoutMemoryItemsNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedCreateWithoutMemoryItemsInput>
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutMemoryItemsInput
  upsert?: Prisma.TranslatableElementUpsertWithoutMemoryItemsInput
  disconnect?: Prisma.TranslatableElementWhereInput | boolean
  delete?: Prisma.TranslatableElementWhereInput | boolean
  connect?: Prisma.TranslatableElementWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TranslatableElementUpdateToOneWithWhereWithoutMemoryItemsInput, Prisma.TranslatableElementUpdateWithoutMemoryItemsInput>, Prisma.TranslatableElementUncheckedUpdateWithoutMemoryItemsInput>
}

export type TranslatableElementCreateNestedOneWithoutTranslationsInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutTranslationsInput
  connect?: Prisma.TranslatableElementWhereUniqueInput
}

export type TranslatableElementUpdateOneRequiredWithoutTranslationsNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutTranslationsInput
  upsert?: Prisma.TranslatableElementUpsertWithoutTranslationsInput
  connect?: Prisma.TranslatableElementWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TranslatableElementUpdateToOneWithWhereWithoutTranslationsInput, Prisma.TranslatableElementUpdateWithoutTranslationsInput>, Prisma.TranslatableElementUncheckedUpdateWithoutTranslationsInput>
}

export type TranslatableElementUpdateManyWithoutEmbeddingNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput> | Prisma.TranslatableElementCreateWithoutEmbeddingInput[] | Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutEmbeddingInput | Prisma.TranslatableElementCreateOrConnectWithoutEmbeddingInput[]
  upsert?: Prisma.TranslatableElementUpsertWithWhereUniqueWithoutEmbeddingInput | Prisma.TranslatableElementUpsertWithWhereUniqueWithoutEmbeddingInput[]
  createMany?: Prisma.TranslatableElementCreateManyEmbeddingInputEnvelope
  set?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  disconnect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  delete?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  update?: Prisma.TranslatableElementUpdateWithWhereUniqueWithoutEmbeddingInput | Prisma.TranslatableElementUpdateWithWhereUniqueWithoutEmbeddingInput[]
  updateMany?: Prisma.TranslatableElementUpdateManyWithWhereWithoutEmbeddingInput | Prisma.TranslatableElementUpdateManyWithWhereWithoutEmbeddingInput[]
  deleteMany?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
}

export type TranslatableElementUncheckedUpdateManyWithoutEmbeddingNestedInput = {
  create?: Prisma.XOR<Prisma.TranslatableElementCreateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput> | Prisma.TranslatableElementCreateWithoutEmbeddingInput[] | Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput[]
  connectOrCreate?: Prisma.TranslatableElementCreateOrConnectWithoutEmbeddingInput | Prisma.TranslatableElementCreateOrConnectWithoutEmbeddingInput[]
  upsert?: Prisma.TranslatableElementUpsertWithWhereUniqueWithoutEmbeddingInput | Prisma.TranslatableElementUpsertWithWhereUniqueWithoutEmbeddingInput[]
  createMany?: Prisma.TranslatableElementCreateManyEmbeddingInputEnvelope
  set?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  disconnect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  delete?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  connect?: Prisma.TranslatableElementWhereUniqueInput | Prisma.TranslatableElementWhereUniqueInput[]
  update?: Prisma.TranslatableElementUpdateWithWhereUniqueWithoutEmbeddingInput | Prisma.TranslatableElementUpdateWithWhereUniqueWithoutEmbeddingInput[]
  updateMany?: Prisma.TranslatableElementUpdateManyWithWhereWithoutEmbeddingInput | Prisma.TranslatableElementUpdateManyWithWhereWithoutEmbeddingInput[]
  deleteMany?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
}

export type TranslatableElementCreateWithoutDocumentInput = {
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Embedding: Prisma.VectorCreateNestedOneWithoutTranslatableElementsInput
  Translations?: Prisma.TranslationCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementUncheckedCreateWithoutDocumentInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  embeddingId: number
  Translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemUncheckedCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementCreateOrConnectWithoutDocumentInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput>
}

export type TranslatableElementCreateManyDocumentInputEnvelope = {
  data: Prisma.TranslatableElementCreateManyDocumentInput | Prisma.TranslatableElementCreateManyDocumentInput[]
  skipDuplicates?: boolean
}

export type TranslatableElementUpsertWithWhereUniqueWithoutDocumentInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutDocumentInput, Prisma.TranslatableElementUncheckedUpdateWithoutDocumentInput>
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutDocumentInput, Prisma.TranslatableElementUncheckedCreateWithoutDocumentInput>
}

export type TranslatableElementUpdateWithWhereUniqueWithoutDocumentInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutDocumentInput, Prisma.TranslatableElementUncheckedUpdateWithoutDocumentInput>
}

export type TranslatableElementUpdateManyWithWhereWithoutDocumentInput = {
  where: Prisma.TranslatableElementScalarWhereInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateManyMutationInput, Prisma.TranslatableElementUncheckedUpdateManyWithoutDocumentInput>
}

export type TranslatableElementScalarWhereInput = {
  AND?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
  OR?: Prisma.TranslatableElementScalarWhereInput[]
  NOT?: Prisma.TranslatableElementScalarWhereInput | Prisma.TranslatableElementScalarWhereInput[]
  id?: Prisma.IntFilter<"TranslatableElement"> | number
  value?: Prisma.StringFilter<"TranslatableElement"> | string
  meta?: Prisma.JsonNullableFilter<"TranslatableElement">
  documentId?: Prisma.StringFilter<"TranslatableElement"> | string
  embeddingId?: Prisma.IntFilter<"TranslatableElement"> | number
}

export type TranslatableElementCreateWithoutMemoryItemsInput = {
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document: Prisma.DocumentCreateNestedOneWithoutTranslatableElementsInput
  Embedding: Prisma.VectorCreateNestedOneWithoutTranslatableElementsInput
  Translations?: Prisma.TranslationCreateNestedManyWithoutTranslatableElementInput
}

export type TranslatableElementUncheckedCreateWithoutMemoryItemsInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
  embeddingId: number
  Translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutTranslatableElementInput
}

export type TranslatableElementCreateOrConnectWithoutMemoryItemsInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedCreateWithoutMemoryItemsInput>
}

export type TranslatableElementUpsertWithoutMemoryItemsInput = {
  update: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedUpdateWithoutMemoryItemsInput>
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedCreateWithoutMemoryItemsInput>
  where?: Prisma.TranslatableElementWhereInput
}

export type TranslatableElementUpdateToOneWithWhereWithoutMemoryItemsInput = {
  where?: Prisma.TranslatableElementWhereInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutMemoryItemsInput, Prisma.TranslatableElementUncheckedUpdateWithoutMemoryItemsInput>
}

export type TranslatableElementUpdateWithoutMemoryItemsInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document?: Prisma.DocumentUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Embedding?: Prisma.VectorUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Translations?: Prisma.TranslationUpdateManyWithoutTranslatableElementNestedInput
}

export type TranslatableElementUncheckedUpdateWithoutMemoryItemsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
  Translations?: Prisma.TranslationUncheckedUpdateManyWithoutTranslatableElementNestedInput
}

export type TranslatableElementCreateWithoutTranslationsInput = {
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document: Prisma.DocumentCreateNestedOneWithoutTranslatableElementsInput
  Embedding: Prisma.VectorCreateNestedOneWithoutTranslatableElementsInput
  MemoryItems?: Prisma.MemoryItemCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementUncheckedCreateWithoutTranslationsInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
  embeddingId: number
  MemoryItems?: Prisma.MemoryItemUncheckedCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementCreateOrConnectWithoutTranslationsInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedCreateWithoutTranslationsInput>
}

export type TranslatableElementUpsertWithoutTranslationsInput = {
  update: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedUpdateWithoutTranslationsInput>
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedCreateWithoutTranslationsInput>
  where?: Prisma.TranslatableElementWhereInput
}

export type TranslatableElementUpdateToOneWithWhereWithoutTranslationsInput = {
  where?: Prisma.TranslatableElementWhereInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutTranslationsInput, Prisma.TranslatableElementUncheckedUpdateWithoutTranslationsInput>
}

export type TranslatableElementUpdateWithoutTranslationsInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document?: Prisma.DocumentUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Embedding?: Prisma.VectorUpdateOneRequiredWithoutTranslatableElementsNestedInput
  MemoryItems?: Prisma.MemoryItemUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementUncheckedUpdateWithoutTranslationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
  MemoryItems?: Prisma.MemoryItemUncheckedUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementCreateWithoutEmbeddingInput = {
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document: Prisma.DocumentCreateNestedOneWithoutTranslatableElementsInput
  Translations?: Prisma.TranslationCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementUncheckedCreateWithoutEmbeddingInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
  Translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutTranslatableElementInput
  MemoryItems?: Prisma.MemoryItemUncheckedCreateNestedManyWithoutSourceElementInput
}

export type TranslatableElementCreateOrConnectWithoutEmbeddingInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput>
}

export type TranslatableElementUpsertWithWhereUniqueWithoutEmbeddingInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  update: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedUpdateWithoutEmbeddingInput>
  create: Prisma.XOR<Prisma.TranslatableElementCreateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedCreateWithoutEmbeddingInput>
}

export type TranslatableElementCreateManyEmbeddingInputEnvelope = {
  data: Prisma.TranslatableElementCreateManyEmbeddingInput | Prisma.TranslatableElementCreateManyEmbeddingInput[]
  skipDuplicates?: boolean
}

export type TranslatableElementUpdateWithWhereUniqueWithoutEmbeddingInput = {
  where: Prisma.TranslatableElementWhereUniqueInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateWithoutEmbeddingInput, Prisma.TranslatableElementUncheckedUpdateWithoutEmbeddingInput>
}

export type TranslatableElementUpdateManyWithWhereWithoutEmbeddingInput = {
  where: Prisma.TranslatableElementScalarWhereInput
  data: Prisma.XOR<Prisma.TranslatableElementUpdateManyMutationInput, Prisma.TranslatableElementUncheckedUpdateManyWithoutEmbeddingInput>
}

export type TranslatableElementCreateManyDocumentInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  embeddingId: number
}

export type TranslatableElementUpdateWithoutDocumentInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Embedding?: Prisma.VectorUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Translations?: Prisma.TranslationUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementUncheckedUpdateWithoutDocumentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
  Translations?: Prisma.TranslationUncheckedUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUncheckedUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementUncheckedUpdateManyWithoutDocumentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  embeddingId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TranslatableElementUpdateWithoutEmbeddingInput = {
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  Document?: Prisma.DocumentUpdateOneRequiredWithoutTranslatableElementsNestedInput
  Translations?: Prisma.TranslationUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementUncheckedUpdateWithoutEmbeddingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
  Translations?: Prisma.TranslationUncheckedUpdateManyWithoutTranslatableElementNestedInput
  MemoryItems?: Prisma.MemoryItemUncheckedUpdateManyWithoutSourceElementNestedInput
}

export type TranslatableElementCreateManyEmbeddingInput = {
  id?: number
  value: string
  meta?: unknown | Prisma.NullableJsonNullValueInput
  documentId: string
}

export type TranslatableElementUncheckedUpdateManyWithoutEmbeddingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  value?: Prisma.StringFieldUpdateOperationsInput | string
  meta?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  documentId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type TranslatableElementCountOutputType
 */

export type TranslatableElementCountOutputType = {
  Translations: number
  MemoryItems: number
}

export type TranslatableElementCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Translations?: boolean | TranslatableElementCountOutputTypeCountTranslationsArgs
  MemoryItems?: boolean | TranslatableElementCountOutputTypeCountMemoryItemsArgs
}

/**
 * TranslatableElementCountOutputType without action
 */
export type TranslatableElementCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElementCountOutputType
   */
  select?: Prisma.TranslatableElementCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TranslatableElementCountOutputType without action
 */
export type TranslatableElementCountOutputTypeCountTranslationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TranslationWhereInput
}

/**
 * TranslatableElementCountOutputType without action
 */
export type TranslatableElementCountOutputTypeCountMemoryItemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MemoryItemWhereInput
}


export type TranslatableElementSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  meta?: boolean
  documentId?: boolean
  embeddingId?: boolean
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
  Translations?: boolean | Prisma.TranslatableElement$TranslationsArgs<ExtArgs>
  MemoryItems?: boolean | Prisma.TranslatableElement$MemoryItemsArgs<ExtArgs>
  _count?: boolean | Prisma.TranslatableElementCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translatableElement"]>

export type TranslatableElementSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  meta?: boolean
  documentId?: boolean
  embeddingId?: boolean
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translatableElement"]>

export type TranslatableElementSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  value?: boolean
  meta?: boolean
  documentId?: boolean
  embeddingId?: boolean
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
}, ExtArgs["result"]["translatableElement"]>

export type TranslatableElementSelectScalar = {
  id?: boolean
  value?: boolean
  meta?: boolean
  documentId?: boolean
  embeddingId?: boolean
}

export type TranslatableElementOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "value" | "meta" | "documentId" | "embeddingId", ExtArgs["result"]["translatableElement"]>
export type TranslatableElementInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
  Translations?: boolean | Prisma.TranslatableElement$TranslationsArgs<ExtArgs>
  MemoryItems?: boolean | Prisma.TranslatableElement$MemoryItemsArgs<ExtArgs>
  _count?: boolean | Prisma.TranslatableElementCountOutputTypeDefaultArgs<ExtArgs>
}
export type TranslatableElementIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
}
export type TranslatableElementIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Document?: boolean | Prisma.DocumentDefaultArgs<ExtArgs>
  Embedding?: boolean | Prisma.VectorDefaultArgs<ExtArgs>
}

export type $TranslatableElementPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TranslatableElement"
  objects: {
    Document: Prisma.$DocumentPayload<ExtArgs>
    Embedding: Prisma.$VectorPayload<ExtArgs>
    Translations: Prisma.$TranslationPayload<ExtArgs>[]
    MemoryItems: Prisma.$MemoryItemPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    value: string
    meta: unknown | null
    documentId: string
    embeddingId: number
  }, ExtArgs["result"]["translatableElement"]>
  composites: {}
}

export type TranslatableElementGetPayload<S extends boolean | null | undefined | TranslatableElementDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload, S>

export type TranslatableElementCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TranslatableElementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TranslatableElementCountAggregateInputType | true
  }

export interface TranslatableElementDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TranslatableElement'], meta: { name: 'TranslatableElement' } }
  /**
   * Find zero or one TranslatableElement that matches the filter.
   * @param {TranslatableElementFindUniqueArgs} args - Arguments to find a TranslatableElement
   * @example
   * // Get one TranslatableElement
   * const translatableElement = await prisma.translatableElement.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TranslatableElementFindUniqueArgs>(args: Prisma.SelectSubset<T, TranslatableElementFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TranslatableElement that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TranslatableElementFindUniqueOrThrowArgs} args - Arguments to find a TranslatableElement
   * @example
   * // Get one TranslatableElement
   * const translatableElement = await prisma.translatableElement.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TranslatableElementFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TranslatableElementFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslatableElement that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementFindFirstArgs} args - Arguments to find a TranslatableElement
   * @example
   * // Get one TranslatableElement
   * const translatableElement = await prisma.translatableElement.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TranslatableElementFindFirstArgs>(args?: Prisma.SelectSubset<T, TranslatableElementFindFirstArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TranslatableElement that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementFindFirstOrThrowArgs} args - Arguments to find a TranslatableElement
   * @example
   * // Get one TranslatableElement
   * const translatableElement = await prisma.translatableElement.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TranslatableElementFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TranslatableElementFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TranslatableElements that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TranslatableElements
   * const translatableElements = await prisma.translatableElement.findMany()
   * 
   * // Get first 10 TranslatableElements
   * const translatableElements = await prisma.translatableElement.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const translatableElementWithIdOnly = await prisma.translatableElement.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TranslatableElementFindManyArgs>(args?: Prisma.SelectSubset<T, TranslatableElementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TranslatableElement.
   * @param {TranslatableElementCreateArgs} args - Arguments to create a TranslatableElement.
   * @example
   * // Create one TranslatableElement
   * const TranslatableElement = await prisma.translatableElement.create({
   *   data: {
   *     // ... data to create a TranslatableElement
   *   }
   * })
   * 
   */
  create<T extends TranslatableElementCreateArgs>(args: Prisma.SelectSubset<T, TranslatableElementCreateArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TranslatableElements.
   * @param {TranslatableElementCreateManyArgs} args - Arguments to create many TranslatableElements.
   * @example
   * // Create many TranslatableElements
   * const translatableElement = await prisma.translatableElement.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TranslatableElementCreateManyArgs>(args?: Prisma.SelectSubset<T, TranslatableElementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TranslatableElements and returns the data saved in the database.
   * @param {TranslatableElementCreateManyAndReturnArgs} args - Arguments to create many TranslatableElements.
   * @example
   * // Create many TranslatableElements
   * const translatableElement = await prisma.translatableElement.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TranslatableElements and only return the `id`
   * const translatableElementWithIdOnly = await prisma.translatableElement.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TranslatableElementCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TranslatableElementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TranslatableElement.
   * @param {TranslatableElementDeleteArgs} args - Arguments to delete one TranslatableElement.
   * @example
   * // Delete one TranslatableElement
   * const TranslatableElement = await prisma.translatableElement.delete({
   *   where: {
   *     // ... filter to delete one TranslatableElement
   *   }
   * })
   * 
   */
  delete<T extends TranslatableElementDeleteArgs>(args: Prisma.SelectSubset<T, TranslatableElementDeleteArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TranslatableElement.
   * @param {TranslatableElementUpdateArgs} args - Arguments to update one TranslatableElement.
   * @example
   * // Update one TranslatableElement
   * const translatableElement = await prisma.translatableElement.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TranslatableElementUpdateArgs>(args: Prisma.SelectSubset<T, TranslatableElementUpdateArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TranslatableElements.
   * @param {TranslatableElementDeleteManyArgs} args - Arguments to filter TranslatableElements to delete.
   * @example
   * // Delete a few TranslatableElements
   * const { count } = await prisma.translatableElement.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TranslatableElementDeleteManyArgs>(args?: Prisma.SelectSubset<T, TranslatableElementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslatableElements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TranslatableElements
   * const translatableElement = await prisma.translatableElement.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TranslatableElementUpdateManyArgs>(args: Prisma.SelectSubset<T, TranslatableElementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TranslatableElements and returns the data updated in the database.
   * @param {TranslatableElementUpdateManyAndReturnArgs} args - Arguments to update many TranslatableElements.
   * @example
   * // Update many TranslatableElements
   * const translatableElement = await prisma.translatableElement.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TranslatableElements and only return the `id`
   * const translatableElementWithIdOnly = await prisma.translatableElement.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TranslatableElementUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TranslatableElementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TranslatableElement.
   * @param {TranslatableElementUpsertArgs} args - Arguments to update or create a TranslatableElement.
   * @example
   * // Update or create a TranslatableElement
   * const translatableElement = await prisma.translatableElement.upsert({
   *   create: {
   *     // ... data to create a TranslatableElement
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TranslatableElement we want to update
   *   }
   * })
   */
  upsert<T extends TranslatableElementUpsertArgs>(args: Prisma.SelectSubset<T, TranslatableElementUpsertArgs<ExtArgs>>): Prisma.Prisma__TranslatableElementClient<runtime.Types.Result.GetResult<Prisma.$TranslatableElementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TranslatableElements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementCountArgs} args - Arguments to filter TranslatableElements to count.
   * @example
   * // Count the number of TranslatableElements
   * const count = await prisma.translatableElement.count({
   *   where: {
   *     // ... the filter for the TranslatableElements we want to count
   *   }
   * })
  **/
  count<T extends TranslatableElementCountArgs>(
    args?: Prisma.Subset<T, TranslatableElementCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TranslatableElementCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TranslatableElement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TranslatableElementAggregateArgs>(args: Prisma.Subset<T, TranslatableElementAggregateArgs>): Prisma.PrismaPromise<GetTranslatableElementAggregateType<T>>

  /**
   * Group by TranslatableElement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TranslatableElementGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TranslatableElementGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TranslatableElementGroupByArgs['orderBy'] }
      : { orderBy?: TranslatableElementGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TranslatableElementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTranslatableElementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TranslatableElement model
 */
readonly fields: TranslatableElementFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TranslatableElement.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TranslatableElementClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Document<T extends Prisma.DocumentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.DocumentDefaultArgs<ExtArgs>>): Prisma.Prisma__DocumentClient<runtime.Types.Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Embedding<T extends Prisma.VectorDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.VectorDefaultArgs<ExtArgs>>): Prisma.Prisma__VectorClient<runtime.Types.Result.GetResult<Prisma.$VectorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Translations<T extends Prisma.TranslatableElement$TranslationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TranslatableElement$TranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  MemoryItems<T extends Prisma.TranslatableElement$MemoryItemsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TranslatableElement$MemoryItemsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MemoryItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TranslatableElement model
 */
export interface TranslatableElementFieldRefs {
  readonly id: Prisma.FieldRef<"TranslatableElement", 'Int'>
  readonly value: Prisma.FieldRef<"TranslatableElement", 'String'>
  readonly meta: Prisma.FieldRef<"TranslatableElement", 'Json'>
  readonly documentId: Prisma.FieldRef<"TranslatableElement", 'String'>
  readonly embeddingId: Prisma.FieldRef<"TranslatableElement", 'Int'>
}
    

// Custom InputTypes
/**
 * TranslatableElement findUnique
 */
export type TranslatableElementFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter, which TranslatableElement to fetch.
   */
  where: Prisma.TranslatableElementWhereUniqueInput
}

/**
 * TranslatableElement findUniqueOrThrow
 */
export type TranslatableElementFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter, which TranslatableElement to fetch.
   */
  where: Prisma.TranslatableElementWhereUniqueInput
}

/**
 * TranslatableElement findFirst
 */
export type TranslatableElementFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter, which TranslatableElement to fetch.
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslatableElements to fetch.
   */
  orderBy?: Prisma.TranslatableElementOrderByWithRelationInput | Prisma.TranslatableElementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslatableElements.
   */
  cursor?: Prisma.TranslatableElementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslatableElements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslatableElements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslatableElements.
   */
  distinct?: Prisma.TranslatableElementScalarFieldEnum | Prisma.TranslatableElementScalarFieldEnum[]
}

/**
 * TranslatableElement findFirstOrThrow
 */
export type TranslatableElementFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter, which TranslatableElement to fetch.
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslatableElements to fetch.
   */
  orderBy?: Prisma.TranslatableElementOrderByWithRelationInput | Prisma.TranslatableElementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TranslatableElements.
   */
  cursor?: Prisma.TranslatableElementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslatableElements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslatableElements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TranslatableElements.
   */
  distinct?: Prisma.TranslatableElementScalarFieldEnum | Prisma.TranslatableElementScalarFieldEnum[]
}

/**
 * TranslatableElement findMany
 */
export type TranslatableElementFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter, which TranslatableElements to fetch.
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TranslatableElements to fetch.
   */
  orderBy?: Prisma.TranslatableElementOrderByWithRelationInput | Prisma.TranslatableElementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TranslatableElements.
   */
  cursor?: Prisma.TranslatableElementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TranslatableElements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TranslatableElements.
   */
  skip?: number
  distinct?: Prisma.TranslatableElementScalarFieldEnum | Prisma.TranslatableElementScalarFieldEnum[]
}

/**
 * TranslatableElement create
 */
export type TranslatableElementCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * The data needed to create a TranslatableElement.
   */
  data: Prisma.XOR<Prisma.TranslatableElementCreateInput, Prisma.TranslatableElementUncheckedCreateInput>
}

/**
 * TranslatableElement createMany
 */
export type TranslatableElementCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TranslatableElements.
   */
  data: Prisma.TranslatableElementCreateManyInput | Prisma.TranslatableElementCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TranslatableElement createManyAndReturn
 */
export type TranslatableElementCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * The data used to create many TranslatableElements.
   */
  data: Prisma.TranslatableElementCreateManyInput | Prisma.TranslatableElementCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TranslatableElement update
 */
export type TranslatableElementUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * The data needed to update a TranslatableElement.
   */
  data: Prisma.XOR<Prisma.TranslatableElementUpdateInput, Prisma.TranslatableElementUncheckedUpdateInput>
  /**
   * Choose, which TranslatableElement to update.
   */
  where: Prisma.TranslatableElementWhereUniqueInput
}

/**
 * TranslatableElement updateMany
 */
export type TranslatableElementUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TranslatableElements.
   */
  data: Prisma.XOR<Prisma.TranslatableElementUpdateManyMutationInput, Prisma.TranslatableElementUncheckedUpdateManyInput>
  /**
   * Filter which TranslatableElements to update
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * Limit how many TranslatableElements to update.
   */
  limit?: number
}

/**
 * TranslatableElement updateManyAndReturn
 */
export type TranslatableElementUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * The data used to update TranslatableElements.
   */
  data: Prisma.XOR<Prisma.TranslatableElementUpdateManyMutationInput, Prisma.TranslatableElementUncheckedUpdateManyInput>
  /**
   * Filter which TranslatableElements to update
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * Limit how many TranslatableElements to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TranslatableElement upsert
 */
export type TranslatableElementUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * The filter to search for the TranslatableElement to update in case it exists.
   */
  where: Prisma.TranslatableElementWhereUniqueInput
  /**
   * In case the TranslatableElement found by the `where` argument doesn't exist, create a new TranslatableElement with this data.
   */
  create: Prisma.XOR<Prisma.TranslatableElementCreateInput, Prisma.TranslatableElementUncheckedCreateInput>
  /**
   * In case the TranslatableElement was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TranslatableElementUpdateInput, Prisma.TranslatableElementUncheckedUpdateInput>
}

/**
 * TranslatableElement delete
 */
export type TranslatableElementDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
  /**
   * Filter which TranslatableElement to delete.
   */
  where: Prisma.TranslatableElementWhereUniqueInput
}

/**
 * TranslatableElement deleteMany
 */
export type TranslatableElementDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TranslatableElements to delete
   */
  where?: Prisma.TranslatableElementWhereInput
  /**
   * Limit how many TranslatableElements to delete.
   */
  limit?: number
}

/**
 * TranslatableElement.Translations
 */
export type TranslatableElement$TranslationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Translation
   */
  select?: Prisma.TranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Translation
   */
  omit?: Prisma.TranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationInclude<ExtArgs> | null
  where?: Prisma.TranslationWhereInput
  orderBy?: Prisma.TranslationOrderByWithRelationInput | Prisma.TranslationOrderByWithRelationInput[]
  cursor?: Prisma.TranslationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TranslationScalarFieldEnum | Prisma.TranslationScalarFieldEnum[]
}

/**
 * TranslatableElement.MemoryItems
 */
export type TranslatableElement$MemoryItemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MemoryItem
   */
  select?: Prisma.MemoryItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MemoryItem
   */
  omit?: Prisma.MemoryItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MemoryItemInclude<ExtArgs> | null
  where?: Prisma.MemoryItemWhereInput
  orderBy?: Prisma.MemoryItemOrderByWithRelationInput | Prisma.MemoryItemOrderByWithRelationInput[]
  cursor?: Prisma.MemoryItemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MemoryItemScalarFieldEnum | Prisma.MemoryItemScalarFieldEnum[]
}

/**
 * TranslatableElement without action
 */
export type TranslatableElementDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TranslatableElement
   */
  select?: Prisma.TranslatableElementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TranslatableElement
   */
  omit?: Prisma.TranslatableElementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslatableElementInclude<ExtArgs> | null
}
