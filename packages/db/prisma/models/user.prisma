model User {
    id            String   @id @default(ulid())
    name          String   @unique
    email         String   @unique
    emailVerified Boolean  @default(false)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    AvatarFile File?

    Accounts                Account[]
    ReadableLanguages       Language[]               @relation("ReadableLanguages")
    WritableLanguages       Language[]               @relation("WritableLanguages")
    Projects                Project[]
    Translations            Translation[]            @relation("Translator")
    Documents               Document[]
    TranslationVotes        TranslationVote[]
    TranslationApprovements TranslationApprovement[]
    Memories                Memory[]
    MemoryItems             MemoryItem[]
    Glossaries              Glossary[]
    Terms                   Term[]
    Exams                   Exam[]
    Answers                 Answer[]
    UserRoles               UserRole[]
    MemberedProjects        Project[]                @relation("ProjectMembers")
    PluginConfigInstance    PluginConfigInstance[]
}

model Account {
    type              String
    provider          String
    providedAccountId String
    meta              Json?

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    userId String
    User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providedAccountId])
    @@unique([userId, provider])
}
