model Translation {
    id        Int      @id @default(autoincrement())
    value     String   @db.Text
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    translatorId String
    Translator   User   @relation("Translator", fields: [translatorId], references: [id], onDelete: Cascade)

    translatableElementId Int
    TranslatableElement   TranslatableElement @relation(fields: [translatableElementId], references: [id], onDelete: Cascade)

    languageId String
    Language   Language @relation(fields: [languageId], references: [id], onDelete: Cascade)

    Votes       TranslationVote[]
    MemoryItems MemoryItem[]
    Approvments TranslationApprovment[]

    @@unique(name: "noSameTranslation", [translatorId, languageId, translatableElementId, value])
}

model TranslationVote {
    id        Int      @id @default(autoincrement())
    value     Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    voterId String
    Voter   User   @relation(fields: [voterId], references: [id], onDelete: Cascade)

    translationId Int
    Translation   Translation @relation(fields: [translationId], references: [id], onDelete: Cascade)

    @@unique(name: "oneVotePerUserUniqueTranslation", [voterId, translationId])
    @@index([translationId])
    @@index([voterId])
}

model TranslationApprovment {
    id       Int     @id @default(autoincrement())
    isActive Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    translationId Int
    Translation   Translation @relation(fields: [translationId], references: [id], onDelete: Cascade)

    userId String?
    User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
